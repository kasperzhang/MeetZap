{"ast":null,"code":"export default {\n  name: \"CalendarEventBlock\",\n  props: {\n    blockStyle: {\n      type: Object,\n      default: () => ({})\n    },\n    calendarEvent: {\n      type: Object,\n      required: true\n    },\n    isGroup: {\n      type: Boolean,\n      required: true\n    },\n    isEditingAvailability: {\n      type: Boolean,\n      required: true\n    },\n    noEventNames: {\n      type: Boolean,\n      required: true\n    },\n    transitionName: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    containerClass() {\n      if (this.calendarEvent.free) {\n        return this.isGroup && !this.isEditingAvailability ? \"tw-border-white tw-bg-light-blue tw-opacity-50\" : \"tw-border-dashed tw-border-blue\";\n      } else {\n        return this.isGroup && !this.isEditingAvailability ? \"tw-border-white tw-bg-light-blue\" : \"tw-border-blue\";\n      }\n    },\n    textColor() {\n      const color = this.isGroup && !this.isEditingAvailability ? \"white\" : this.noEventNames ? \"dark-gray\" : \"blue\";\n      return `tw-text-${color}`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","blockStyle","type","Object","default","calendarEvent","required","isGroup","Boolean","isEditingAvailability","noEventNames","transitionName","String","computed","containerClass","free","textColor","color"],"sources":["src/components/schedule_overlap/CalendarEventBlock.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\" appear>\n    <div\n      class=\"tw-absolute tw-w-full tw-select-none tw-p-px\"\n      :style=\"blockStyle\"\n      style=\"pointer-events: none\"\n    >\n      <div\n        class=\"tw-h-full tw-w-full tw-overflow-hidden tw-text-ellipsis tw-rounded tw-border tw-border-solid tw-p-1 tw-text-xs\"\n        :class=\"containerClass\"\n      >\n        <div :class=\"textColor\" class=\"ph-no-capture tw-font-medium\">\n          {{ noEventNames ? \"BUSY\" : calendarEvent.summary }}\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: \"CalendarEventBlock\",\n  props: {\n    blockStyle: {\n      type: Object,\n      default: () => ({}),\n    },\n    calendarEvent: {\n      type: Object,\n      required: true,\n    },\n    isGroup: {\n      type: Boolean,\n      required: true,\n    },\n    isEditingAvailability: {\n      type: Boolean,\n      required: true,\n    },\n    noEventNames: {\n      type: Boolean,\n      required: true,\n    },\n    transitionName: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    containerClass() {\n      if (this.calendarEvent.free) {\n        return this.isGroup && !this.isEditingAvailability\n          ? \"tw-border-white tw-bg-light-blue tw-opacity-50\"\n          : \"tw-border-dashed tw-border-blue\"\n      } else {\n        return this.isGroup && !this.isEditingAvailability\n          ? \"tw-border-white tw-bg-light-blue\"\n          : \"tw-border-blue\"\n      }\n    },\n    textColor() {\n      const color =\n        this.isGroup && !this.isEditingAvailability\n          ? \"white\"\n          : this.noEventNames\n          ? \"dark-gray\"\n          : \"blue\"\n      return `tw-text-${color}`\n    },\n  },\n}\n</script>\n"],"mappings":"AAoBA;EACAA,IAAA;EACAC,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,aAAA;MACAH,IAAA,EAAAC,MAAA;MACAG,QAAA;IACA;IACAC,OAAA;MACAL,IAAA,EAAAM,OAAA;MACAF,QAAA;IACA;IACAG,qBAAA;MACAP,IAAA,EAAAM,OAAA;MACAF,QAAA;IACA;IACAI,YAAA;MACAR,IAAA,EAAAM,OAAA;MACAF,QAAA;IACA;IACAK,cAAA;MACAT,IAAA,EAAAU,MAAA;MACAN,QAAA;IACA;EACA;EACAO,QAAA;IACAC,eAAA;MACA,SAAAT,aAAA,CAAAU,IAAA;QACA,YAAAR,OAAA,UAAAE,qBAAA,GACA,mDACA;MACA;QACA,YAAAF,OAAA,UAAAE,qBAAA,GACA,qCACA;MACA;IACA;IACAO,UAAA;MACA,MAAAC,KAAA,GACA,KAAAV,OAAA,UAAAE,qBAAA,GACA,UACA,KAAAC,YAAA,GACA,cACA;MACA,kBAAAO,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}