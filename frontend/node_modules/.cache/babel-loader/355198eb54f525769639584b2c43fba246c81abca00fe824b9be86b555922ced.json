{"ast":null,"code":"import { mapMutations, mapState, mapActions, mapGetters } from \"vuex\";\nimport { get, getLocation, isPhone, post, signInGoogle, signInOutlook, isPremiumUser } from \"@/utils\";\nimport { authTypes, calendarTypes, eventTypes, numFreeEvents, upgradeDialogTypes } from \"@/constants\";\nimport AutoSnackbar from \"@/components/AutoSnackbar\";\nimport AuthUserMenu from \"@/components/AuthUserMenu.vue\";\nimport SignInNotSupportedDialog from \"@/components/SignInNotSupportedDialog.vue\";\nimport UpvoteRedditSnackbar from \"@/components/UpvoteRedditSnackbar.vue\";\nimport Logo from \"@/components/Logo.vue\";\nimport isWebview from \"is-ua-webview\";\nimport NewDialog from \"./components/NewDialog.vue\";\nimport UpgradeDialog from \"@/components/pricing/UpgradeDialog.vue\";\nimport SignInDialog from \"@/components/SignInDialog.vue\";\nimport DiscordBanner from \"@/components/DiscordBanner.vue\";\nexport default {\n  name: \"App\",\n  metaInfo: {\n    htmlAttrs: {\n      lang: \"en-US\"\n    }\n  },\n  components: {\n    AutoSnackbar,\n    AuthUserMenu,\n    SignInNotSupportedDialog,\n    NewDialog,\n    UpvoteRedditSnackbar,\n    Logo,\n    UpgradeDialog,\n    SignInDialog,\n    DiscordBanner\n  },\n  data: () => ({\n    mounted: false,\n    loaded: false,\n    scrollY: 0,\n    webviewDialog: false,\n    signInDialog: false\n  }),\n  computed: {\n    ...mapGetters([\"isPremiumUser\"]),\n    ...mapState([\"authUser\", \"error\", \"info\", \"enablePaywall\", \"upgradeDialogVisible\", \"newDialogOptions\"]),\n    isPhone() {\n      return isPhone(this.$vuetify);\n    },\n    showHeader() {\n      return this.$route.name !== \"landing\" && this.$route.name !== \"auth\" && this.$route.name !== \"privacy-policy\";\n    },\n    showFeedbackBtn() {\n      return !this.isPhone || this.$route.name === \"home\";\n    },\n    routerViewClass() {\n      let c = \"\";\n      if (this.showHeader) {\n        if (this.isPhone) {\n          c += \"tw-pt-12 \";\n        } else {\n          c += \"tw-pt-14 \";\n        }\n      }\n      return c;\n    }\n  },\n  methods: {\n    ...mapMutations([\"setAuthUser\", \"setSignUpFormEnabled\", \"setPricingPageConversion\", \"setEnablePaywall\", \"setFeatureFlagsLoaded\"]),\n    ...mapActions([\"getEvents\", \"showUpgradeDialog\", \"hideUpgradeDialog\", \"createNew\"]),\n    handleScroll(e) {\n      this.scrollY = window.scrollY;\n    },\n    _createNew(eventOnly = false) {\n      this.$posthog?.capture(\"create_new_button_clicked\", {\n        eventOnly: eventOnly\n      });\n      this.createNew({\n        eventOnly\n      });\n    },\n    signIn() {\n      if (this.$route.name === \"event\" || this.$route.name === \"group\" || this.$route.name === \"signUp\") {\n        if (isWebview(navigator.userAgent)) {\n          this.webviewDialog = true;\n          return;\n        }\n        this.signInDialog = true;\n      }\n    },\n    _signIn(calendarType) {\n      if (this.$route.name === \"event\" || this.$route.name === \"group\" || this.$route.name === \"signUp\") {\n        let state;\n        if (this.$route.name === \"event\") {\n          state = {\n            eventId: this.$route.params.eventId,\n            type: authTypes.EVENT_SIGN_IN\n          };\n        } else if (this.$route.name === \"group\") {\n          state = {\n            groupId: this.$route.params.groupId,\n            type: authTypes.GROUP_SIGN_IN\n          };\n        }\n        if (calendarType === calendarTypes.GOOGLE) {\n          signInGoogle({\n            state,\n            selectAccount: true\n          });\n        } else if (calendarType === calendarTypes.OUTLOOK) {\n          signInOutlook({\n            state,\n            selectAccount: true\n          });\n        }\n      }\n    },\n    setFeatureFlags() {\n      if (!this.$posthog) return;\n      this.setSignUpFormEnabled(this.$posthog.isFeatureEnabled(\"sign-up-form\"));\n      this.setPricingPageConversion(this.$posthog.getFeatureFlag(\"pricing-page-conversion\"));\n      this.setEnablePaywall(this.$posthog.isFeatureEnabled(\"enable-paywall\"));\n      this.setFeatureFlagsLoaded(true);\n    },\n    trackFeedbackClick() {\n      this.$posthog?.capture(\"give_feedback_button_clicked\");\n    },\n    handleUpgradeDialogInput(value) {\n      if (!value) {\n        this.hideUpgradeDialog();\n      }\n    }\n  },\n  async created() {\n    await get(\"/user/profile\").then(authUser => {\n      this.setAuthUser(authUser);\n      this.$posthog?.identify(authUser._id, {\n        email: authUser.email,\n        firstName: authUser.firstName,\n        lastName: authUser.lastName\n      });\n    }).catch(() => {\n      this.setAuthUser(null);\n    }).finally(() => {\n      this.loaded = true;\n    });\n\n    // Event listeners\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.getEvents();\n  },\n  mounted() {\n    this.mounted = true;\n    this.scrollY = window.scrollY;\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  },\n  watch: {\n    $route: {\n      immediate: true,\n      async handler() {\n        const originalHref = window.location.href;\n        if (this.$route.name) {\n          this.$posthog?.capture(\"$pageview\");\n        }\n\n        // Check for poster query parameter\n        if (this.$route.query.p) {\n          let location = null;\n          try {\n            location = await getLocation();\n          } catch (e) {\n            // User probably has adblocker\n          }\n          post(\"/analytics/scanned-poster\", {\n            url: originalHref,\n            location\n          });\n        }\n      }\n    },\n    authUser: {\n      immediate: true,\n      handler() {\n        if (this.$posthog) {\n          // Check feature flags (only if posthog is enabled)\n          this.$posthog.setPersonPropertiesForFlags({\n            email: this.authUser?.email\n          });\n          this.$posthog.onFeatureFlags(() => {\n            this.setFeatureFlags();\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","mapState","mapActions","mapGetters","get","getLocation","isPhone","post","signInGoogle","signInOutlook","isPremiumUser","authTypes","calendarTypes","eventTypes","numFreeEvents","upgradeDialogTypes","AutoSnackbar","AuthUserMenu","SignInNotSupportedDialog","UpvoteRedditSnackbar","Logo","isWebview","NewDialog","UpgradeDialog","SignInDialog","DiscordBanner","name","metaInfo","htmlAttrs","lang","components","data","mounted","loaded","scrollY","webviewDialog","signInDialog","computed","$vuetify","showHeader","$route","showFeedbackBtn","routerViewClass","c","methods","handleScroll","e","window","_createNew","eventOnly","$posthog","capture","createNew","signIn","navigator","userAgent","_signIn","calendarType","state","eventId","params","type","EVENT_SIGN_IN","groupId","GROUP_SIGN_IN","GOOGLE","selectAccount","OUTLOOK","setFeatureFlags","setSignUpFormEnabled","isFeatureEnabled","setPricingPageConversion","getFeatureFlag","setEnablePaywall","setFeatureFlagsLoaded","trackFeedbackClick","handleUpgradeDialogInput","value","hideUpgradeDialog","created","then","authUser","setAuthUser","identify","_id","email","firstName","lastName","catch","finally","addEventListener","getEvents","beforeDestroy","removeEventListener","watch","immediate","handler","originalHref","location","href","query","p","url","setPersonPropertiesForFlags","onFeatureFlags"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <DiscordBanner />\n    <AutoSnackbar color=\"error\" :text=\"error\" />\n    <AutoSnackbar color=\"tw-bg-blue\" :text=\"info\" />\n    <SignInNotSupportedDialog v-model=\"webviewDialog\" />\n    <SignInDialog v-model=\"signInDialog\" @signIn=\"_signIn\" />\n    <NewDialog\n      v-model=\"newDialogOptions.show\"\n      :type=\"newDialogOptions.openNewGroup ? 'group' : 'event'\"\n      :contactsPayload=\"newDialogOptions.contactsPayload\"\n      :no-tabs=\"newDialogOptions.eventOnly\"\n      :folder-id=\"newDialogOptions.folderId\"\n    />\n    <UpgradeDialog\n      :value=\"upgradeDialogVisible\"\n      @input=\"handleUpgradeDialogInput\"\n    />\n    <UpvoteRedditSnackbar />\n    <div\n      v-if=\"showHeader\"\n      class=\"tw-fixed tw-z-40 tw-h-14 tw-w-screen tw-bg-white sm:tw-h-16\"\n      dark\n    >\n      <div\n        class=\"tw-relative tw-m-auto tw-flex tw-h-full tw-max-w-6xl tw-items-center tw-justify-center tw-px-4\"\n      >\n        <router-link :to=\"{ name: 'home' }\">\n          <Logo type=\"schej\" />\n        </router-link>\n        <v-expand-x-transition>\n          <span\n            v-if=\"isPremiumUser\"\n            class=\"tw-ml-2 tw-cursor-default tw-rounded-md tw-bg-[linear-gradient(-25deg,#0a483d,#00994c,#126045,#0a483d)] tw-px-2 tw-py-1 tw-text-sm tw-font-semibold tw-text-white tw-opacity-80\"\n          >\n            Premium\n          </span>\n        </v-expand-x-transition>\n\n        <v-spacer />\n\n        <v-btn\n          v-if=\"$route.name === 'event'\"\n          id=\"top-right-create-btn\"\n          text\n          @click=\"() => _createNew(true)\"\n        >\n          创建活动\n        </v-btn>\n        <v-btn\n          v-if=\"showFeedbackBtn\"\n          id=\"feedback-btn\"\n          text\n          href=\"https://forms.gle/9AgRy4PQfWfVuBnw8\"\n          target=\"_blank\"\n          @click=\"trackFeedbackClick\"\n        >\n          提供反馈\n        </v-btn>\n        <v-btn\n          v-if=\"!isPhone\"\n          text\n          href=\"https://www.paypal.com/donate/?hosted_button_id=KWCH6LGJCP6E6\"\n          target=\"_blank\"\n        >\n          支持我们\n        </v-btn>\n        <v-btn\n          v-if=\"$route.name === 'home' && !isPhone\"\n          color=\"primary\"\n          class=\"tw-mx-2 tw-rounded-md\"\n          :style=\"{\n            boxShadow: '0px 2px 8px 0px #00994C80 !important',\n          }\"\n          @click=\"() => _createNew()\"\n        >\n          + Create new\n        </v-btn>\n        <div v-if=\"authUser\" class=\"sm:tw-ml-4\">\n          <AuthUserMenu />\n        </div>\n        <v-btn v-else id=\"top-right-sign-in-btn\" text @click=\"signIn\">\n          登录\n        </v-btn>\n      </div>\n    </div>\n\n    <v-main>\n      <div class=\"tw-flex tw-h-screen tw-flex-col\">\n        <div\n          class=\"tw-relative tw-flex-1 tw-overscroll-auto\"\n          :class=\"routerViewClass\"\n        >\n          <router-view v-if=\"loaded\" :key=\"$route.fullPath\" />\n        </div>\n      </div>\n    </v-main>\n  </v-app>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=DM+Sans&display=swap\");\n\nhtml {\n  overflow-y: auto !important;\n  /* overscroll-behavior: none; */\n  scroll-behavior: smooth;\n}\n\n* {\n  font-family: \"DM Sans\", sans-serif;\n  /* touch-action: manipulation !important; */\n}\n\n.v-messages__message {\n  font-size: theme(\"fontSize.xs\");\n  line-height: 1.25;\n}\n.v-input--selection-controls {\n  margin-top: 0px !important;\n  padding-top: 0px !important;\n}\n\n/** Buttons */\n.v-btn {\n  letter-spacing: unset !important;\n  text-transform: unset !important;\n}\n.v-btn:not(.v-btn--round, .v-btn-toggle > .v-btn).v-size--default {\n  height: 38px !important;\n  border-radius: theme(\"borderRadius.md\") !important;\n}\n\n.v-btn.v-btn--is-elevated {\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15) !important;\n  -moz-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15) !important;\n  border: 1px solid theme(\"colors.light-gray-stroke\");\n}\n\n.v-btn.v-btn--is-elevated.tw-bg-white {\n  -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.25) !important;\n  -moz-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.25) !important;\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.25) !important;\n  border: 1px solid theme(\"colors.off-white\");\n}\n\n.v-btn.v-btn--is-elevated.primary,\n.v-btn.v-btn--is-elevated.tw-bg-green,\n.v-btn.v-btn--is-elevated.tw-bg-white.tw-text-green {\n  -webkit-box-shadow: 0px 2px 8px 0px #00994c80 !important;\n  -moz-box-shadow: 0px 2px 8px 0px #00994c80 !important;\n  box-shadow: 0px 2px 8px 0px #00994c80 !important;\n  border: 1px solid theme(\"colors.light-green\") !important;\n}\n\n.v-btn.v-btn--is-elevated.tw-bg-very-dark-gray {\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  -moz-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  border: 1px solid theme(\"colors.dark-gray\") !important;\n}\n\n.v-btn.v-btn--is-elevated.tw-bg-blue,\n.v-btn.v-btn--is-elevated.tw-bg-white.tw-text-blue {\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  -moz-box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.25) !important;\n  border: 1px solid theme(\"colors.light-blue\") !important;\n}\n\n/** Drop shadows */\n.v-text-field.v-text-field--solo:not(.v-text-field--solo-flat)\n  > .v-input__control\n  > .v-input__slot {\n  filter: drop-shadow(0 0.5px 2px rgba(0, 0, 0, 0.1)) !important;\n  box-shadow: inset 0 -1px 0 0 rgba(0, 0, 0, 0.1) !important;\n  border-radius: theme(\"borderRadius.md\") !important;\n  border: 1px solid #4f4f4f1f !important;\n}\n.v-menu__content {\n  box-shadow: 0px 5px 5px -1px rgba(0, 0, 0, 0.1),\n    0px 8px 10px 0.5px rgba(0, 0, 0, 0.07), 0px 3px 14px 1px rgba(0, 0, 0, 0.06) !important;\n}\n.overlay-avail-shadow-green {\n  box-shadow: 0px 3px 6px 0px #1c7d454d !important;\n}\n.overlay-avail-shadow-yellow {\n  box-shadow: 0px 2px 8px 0px #e5a8004d !important;\n}\n\n/** Switch  */\n.v-input--switch--inset .v-input--selection-controls__input {\n  margin-right: 0 !important;\n  transform: scale(80%) !important;\n}\n.v-input--switch__track.primary--text {\n  border: 2px theme(\"colors.light-green\") solid !important;\n}\n.v-input--switch__track {\n  border: 2px theme(\"colors.gray\") solid !important;\n  background-color: theme(\"colors.gray\") !important;\n  box-shadow: 0px 0.74px 4.46px 0px rgba(0, 0, 0, 0.1) !important;\n}\n.v-input--is-label-active .v-input--switch__track {\n  background-color: currentColor !important;\n  box-shadow: 0px 1.5px 4.5px 0px rgba(0, 0, 0, 0.2) !important;\n}\n.v-input--switch--inset .v-input--switch__track,\n.v-input--switch--inset .v-input--selection-controls__input {\n  opacity: 1 !important;\n}\n.v-input--switch__thumb {\n  background-color: white !important;\n}\n.v-text-field__details {\n  padding: 0 !important;\n}\n\n/** Error color */\n.error--text .v-input__slot {\n  outline: red solid;\n  border-radius: 3px;\n}\n</style>\n\n<script>\nimport { mapMutations, mapState, mapActions, mapGetters } from \"vuex\"\nimport {\n  get,\n  getLocation,\n  isPhone,\n  post,\n  signInGoogle,\n  signInOutlook,\n  isPremiumUser,\n} from \"@/utils\"\nimport {\n  authTypes,\n  calendarTypes,\n  eventTypes,\n  numFreeEvents,\n  upgradeDialogTypes,\n} from \"@/constants\"\nimport AutoSnackbar from \"@/components/AutoSnackbar\"\nimport AuthUserMenu from \"@/components/AuthUserMenu.vue\"\nimport SignInNotSupportedDialog from \"@/components/SignInNotSupportedDialog.vue\"\nimport UpvoteRedditSnackbar from \"@/components/UpvoteRedditSnackbar.vue\"\nimport Logo from \"@/components/Logo.vue\"\nimport isWebview from \"is-ua-webview\"\nimport NewDialog from \"./components/NewDialog.vue\"\nimport UpgradeDialog from \"@/components/pricing/UpgradeDialog.vue\"\nimport SignInDialog from \"@/components/SignInDialog.vue\"\nimport DiscordBanner from \"@/components/DiscordBanner.vue\"\n\nexport default {\n  name: \"App\",\n\n  metaInfo: {\n    htmlAttrs: {\n      lang: \"en-US\",\n    },\n  },\n\n  components: {\n    AutoSnackbar,\n    AuthUserMenu,\n    SignInNotSupportedDialog,\n    NewDialog,\n    UpvoteRedditSnackbar,\n    Logo,\n    UpgradeDialog,\n    SignInDialog,\n    DiscordBanner,\n  },\n\n  data: () => ({\n    mounted: false,\n    loaded: false,\n    scrollY: 0,\n    webviewDialog: false,\n    signInDialog: false,\n  }),\n\n  computed: {\n    ...mapGetters([\"isPremiumUser\"]),\n    ...mapState([\n      \"authUser\",\n      \"error\",\n      \"info\",\n      \"enablePaywall\",\n      \"upgradeDialogVisible\",\n      \"newDialogOptions\",\n    ]),\n    isPhone() {\n      return isPhone(this.$vuetify)\n    },\n    showHeader() {\n      return (\n        this.$route.name !== \"landing\" &&\n        this.$route.name !== \"auth\" &&\n        this.$route.name !== \"privacy-policy\"\n      )\n    },\n    showFeedbackBtn() {\n      return !this.isPhone || this.$route.name === \"home\"\n    },\n    routerViewClass() {\n      let c = \"\"\n      if (this.showHeader) {\n        if (this.isPhone) {\n          c += \"tw-pt-12 \"\n        } else {\n          c += \"tw-pt-14 \"\n        }\n      }\n      return c\n    },\n  },\n\n  methods: {\n    ...mapMutations([\n      \"setAuthUser\",\n      \"setSignUpFormEnabled\",\n      \"setPricingPageConversion\",\n      \"setEnablePaywall\",\n      \"setFeatureFlagsLoaded\",\n    ]),\n    ...mapActions([\n      \"getEvents\",\n      \"showUpgradeDialog\",\n      \"hideUpgradeDialog\",\n      \"createNew\",\n    ]),\n    handleScroll(e) {\n      this.scrollY = window.scrollY\n    },\n    _createNew(eventOnly = false) {\n      this.$posthog?.capture(\"create_new_button_clicked\", {\n        eventOnly: eventOnly,\n      })\n      this.createNew({ eventOnly })\n    },\n    signIn() {\n      if (\n        this.$route.name === \"event\" ||\n        this.$route.name === \"group\" ||\n        this.$route.name === \"signUp\"\n      ) {\n        if (isWebview(navigator.userAgent)) {\n          this.webviewDialog = true\n          return\n        }\n        this.signInDialog = true\n      }\n    },\n    _signIn(calendarType) {\n      if (\n        this.$route.name === \"event\" ||\n        this.$route.name === \"group\" ||\n        this.$route.name === \"signUp\"\n      ) {\n        let state\n        if (this.$route.name === \"event\") {\n          state = {\n            eventId: this.$route.params.eventId,\n            type: authTypes.EVENT_SIGN_IN,\n          }\n        } else if (this.$route.name === \"group\") {\n          state = {\n            groupId: this.$route.params.groupId,\n            type: authTypes.GROUP_SIGN_IN,\n          }\n        }\n        if (calendarType === calendarTypes.GOOGLE) {\n          signInGoogle({\n            state,\n            selectAccount: true,\n          })\n        } else if (calendarType === calendarTypes.OUTLOOK) {\n          signInOutlook({\n            state,\n            selectAccount: true,\n          })\n        }\n      }\n    },\n    setFeatureFlags() {\n      if (!this.$posthog) return\n\n      this.setSignUpFormEnabled(this.$posthog.isFeatureEnabled(\"sign-up-form\"))\n      this.setPricingPageConversion(\n        this.$posthog.getFeatureFlag(\"pricing-page-conversion\")\n      )\n      this.setEnablePaywall(this.$posthog.isFeatureEnabled(\"enable-paywall\"))\n      this.setFeatureFlagsLoaded(true)\n    },\n    trackFeedbackClick() {\n      this.$posthog?.capture(\"give_feedback_button_clicked\")\n    },\n    handleUpgradeDialogInput(value) {\n      if (!value) {\n        this.hideUpgradeDialog()\n      }\n    },\n  },\n\n  async created() {\n    await get(\"/user/profile\")\n      .then((authUser) => {\n        this.setAuthUser(authUser)\n\n        this.$posthog?.identify(authUser._id, {\n          email: authUser.email,\n          firstName: authUser.firstName,\n          lastName: authUser.lastName,\n        })\n      })\n      .catch(() => {\n        this.setAuthUser(null)\n      })\n      .finally(() => {\n        this.loaded = true\n      })\n\n    // Event listeners\n    window.addEventListener(\"scroll\", this.handleScroll)\n\n    this.getEvents()\n  },\n\n  mounted() {\n    this.mounted = true\n    this.scrollY = window.scrollY\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.handleScroll)\n  },\n\n  watch: {\n    $route: {\n      immediate: true,\n      async handler() {\n        const originalHref = window.location.href\n        if (this.$route.name) {\n          this.$posthog?.capture(\"$pageview\")\n        }\n\n        // Check for poster query parameter\n        if (this.$route.query.p) {\n          let location = null\n          try {\n            location = await getLocation()\n          } catch (e) {\n            // User probably has adblocker\n          }\n\n          post(\"/analytics/scanned-poster\", {\n            url: originalHref,\n            location,\n          })\n        }\n      },\n    },\n    authUser: {\n      immediate: true,\n      handler() {\n        if (this.$posthog) {\n          // Check feature flags (only if posthog is enabled)\n          this.$posthog.setPersonPropertiesForFlags({\n            email: this.authUser?.email,\n          })\n          this.$posthog.onFeatureFlags(() => {\n            this.setFeatureFlags()\n          })\n        }\n      },\n    },\n  },\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}