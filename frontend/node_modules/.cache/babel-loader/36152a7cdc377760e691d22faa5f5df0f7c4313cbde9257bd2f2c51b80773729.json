{"ast":null,"code":"import Event from \"./Event.vue\";\nimport { mapActions, mapState } from \"vuex\";\nimport { get } from \"@/utils\";\nimport { errors, eventTypes } from \"@/constants\";\nimport AccessDenied from \"@/components/groups/AccessDenied.vue\";\nimport NotSignedIn from \"@/components/groups/NotSignedIn.vue\";\nexport default {\n  name: \"Group\",\n  props: {\n    groupId: {\n      type: String,\n      required: true\n    },\n    fromSignIn: {\n      type: Boolean,\n      default: false\n    },\n    initialTimezone: {\n      type: Object,\n      default: () => ({})\n    },\n    contactsPayload: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  components: {\n    AccessDenied,\n    Event,\n    NotSignedIn\n  },\n  data() {\n    return {\n      event: null\n    };\n  },\n  computed: {\n    ...mapState([\"authUser\"]),\n    accessDenied() {\n      if (this.event.ownerId === this.authUser?._id) {\n        return false;\n      }\n      const attendees = this.event?.attendees;\n      if (!attendees) return true;\n      let found = false;\n      for (const attendee of attendees) {\n        if (attendee.email.toLowerCase() === this.authUser.email.toLowerCase()) {\n          // The line below is commented out because we want attendee to be able to rejoin group after declining\n          // if (attendee.declined) return true\n\n          found = true;\n          break;\n        }\n      }\n      return !found;\n    }\n  },\n  methods: {\n    ...mapActions([\"showError\"])\n  },\n  async created() {\n    try {\n      this.event = await get(`/events/${this.groupId}`);\n\n      // Redirect if we're at the wrong route\n      if (this.event.type !== eventTypes.GROUP) {\n        this.$router.replace({\n          name: \"event\",\n          params: {\n            eventId: this.groupId,\n            initialTimezone: this.initialTimezone,\n            fromSignIn: this.fromSignIn,\n            contactsPayload: this.contactsPayload\n          }\n        });\n      }\n    } catch (err) {\n      switch (err.error) {\n        case errors.EventNotFound:\n          this.showError(\"The specified event does not exist!\");\n          this.$router.replace({\n            name: \"home\"\n          });\n          return;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Event","mapActions","mapState","get","errors","eventTypes","AccessDenied","NotSignedIn","name","props","groupId","type","String","required","fromSignIn","Boolean","default","initialTimezone","Object","contactsPayload","components","data","event","computed","accessDenied","ownerId","authUser","_id","attendees","found","attendee","email","toLowerCase","methods","created","GROUP","$router","replace","params","eventId","err","error","EventNotFound","showError"],"sources":["src/views/Group.vue"],"sourcesContent":["<template>\n  <div v-if=\"event\" class=\"tw-h-full\">\n    <NotSignedIn v-if=\"!authUser\" :event=\"event\" />\n    <AccessDenied v-else-if=\"accessDenied\" />\n    <Event\n      v-else\n      :eventId=\"groupId\"\n      :fromSignIn=\"fromSignIn\"\n      :initialTimezone=\"initialTimezone\"\n      :contactsPayload=\"contactsPayload\"\n    ></Event>\n  </div>\n</template>\n\n<script>\nimport Event from \"./Event.vue\"\nimport { mapActions, mapState } from \"vuex\"\nimport { get } from \"@/utils\"\nimport { errors, eventTypes } from \"@/constants\"\nimport AccessDenied from \"@/components/groups/AccessDenied.vue\"\nimport NotSignedIn from \"@/components/groups/NotSignedIn.vue\"\n\nexport default {\n  name: \"Group\",\n\n  props: {\n    groupId: { type: String, required: true },\n    fromSignIn: { type: Boolean, default: false },\n    initialTimezone: { type: Object, default: () => ({}) },\n    contactsPayload: { type: Object, default: () => ({}) },\n  },\n\n  components: {\n    AccessDenied,\n    Event,\n    NotSignedIn,\n  },\n\n  data() {\n    return {\n      event: null,\n    }\n  },\n\n  computed: {\n    ...mapState([\"authUser\"]),\n    accessDenied() {\n      if (this.event.ownerId === this.authUser?._id) {\n        return false\n      }\n\n      const attendees = this.event?.attendees\n      if (!attendees) return true\n\n      let found = false\n      for (const attendee of attendees) {\n        if (attendee.email.toLowerCase() === this.authUser.email.toLowerCase()) {\n          // The line below is commented out because we want attendee to be able to rejoin group after declining\n          // if (attendee.declined) return true\n\n          found = true\n          break\n        }\n      }\n\n      return !found\n    },\n  },\n\n  methods: {\n    ...mapActions([\"showError\"]),\n  },\n\n  async created() {\n    try {\n      this.event = await get(`/events/${this.groupId}`)\n\n      // Redirect if we're at the wrong route\n      if (this.event.type !== eventTypes.GROUP) {\n        this.$router.replace({\n          name: \"event\",\n          params: {\n            eventId: this.groupId,\n            initialTimezone: this.initialTimezone,\n            fromSignIn: this.fromSignIn,\n            contactsPayload: this.contactsPayload,\n          },\n        })\n      }\n    } catch (err) {\n      switch (err.error) {\n        case errors.EventNotFound:\n          this.showError(\"The specified event does not exist!\")\n          this.$router.replace({ name: \"home\" })\n          return\n      }\n    }\n  },\n}\n</script>\n"],"mappings":"AAeA,OAAAA,KAAA;AACA,SAAAC,UAAA,EAAAC,QAAA;AACA,SAAAC,GAAA;AACA,SAAAC,MAAA,EAAAC,UAAA;AACA,OAAAC,YAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,OAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IACAC,UAAA;MAAAH,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAC,eAAA;MAAAN,IAAA,EAAAO,MAAA;MAAAF,OAAA,EAAAA,CAAA;IAAA;IACAG,eAAA;MAAAR,IAAA,EAAAO,MAAA;MAAAF,OAAA,EAAAA,CAAA;IAAA;EACA;EAEAI,UAAA;IACAd,YAAA;IACAN,KAAA;IACAO;EACA;EAEAc,KAAA;IACA;MACAC,KAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAArB,QAAA;IACAsB,aAAA;MACA,SAAAF,KAAA,CAAAG,OAAA,UAAAC,QAAA,EAAAC,GAAA;QACA;MACA;MAEA,MAAAC,SAAA,QAAAN,KAAA,EAAAM,SAAA;MACA,KAAAA,SAAA;MAEA,IAAAC,KAAA;MACA,WAAAC,QAAA,IAAAF,SAAA;QACA,IAAAE,QAAA,CAAAC,KAAA,CAAAC,WAAA,YAAAN,QAAA,CAAAK,KAAA,CAAAC,WAAA;UACA;UACA;;UAEAH,KAAA;UACA;QACA;MACA;MAEA,QAAAA,KAAA;IACA;EACA;EAEAI,OAAA;IACA,GAAAhC,UAAA;EACA;EAEA,MAAAiC,QAAA;IACA;MACA,KAAAZ,KAAA,SAAAnB,GAAA,iBAAAO,OAAA;;MAEA;MACA,SAAAY,KAAA,CAAAX,IAAA,KAAAN,UAAA,CAAA8B,KAAA;QACA,KAAAC,OAAA,CAAAC,OAAA;UACA7B,IAAA;UACA8B,MAAA;YACAC,OAAA,OAAA7B,OAAA;YACAO,eAAA,OAAAA,eAAA;YACAH,UAAA,OAAAA,UAAA;YACAK,eAAA,OAAAA;UACA;QACA;MACA;IACA,SAAAqB,GAAA;MACA,QAAAA,GAAA,CAAAC,KAAA;QACA,KAAArC,MAAA,CAAAsC,aAAA;UACA,KAAAC,SAAA;UACA,KAAAP,OAAA,CAAAC,OAAA;YAAA7B,IAAA;UAAA;UACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}