{"ast":null,"code":"import { mapState, mapActions } from \"vuex\";\nimport { authTypes, calendarTypes } from \"@/constants\";\nimport { post, _delete, signInGoogle, getCalendarAccountKey } from \"@/utils\";\nimport UserAvatarContent from \"@/components/UserAvatarContent.vue\";\nexport default {\n  name: \"CalendarAccount\",\n  props: {\n    toggleState: {\n      type: Boolean,\n      default: false\n    },\n    account: {\n      type: Object,\n      default: () => {}\n    },\n    eventId: {\n      type: String,\n      default: \"\"\n    },\n    calendarEventsMap: {\n      type: Object,\n      default: () => {}\n    },\n    // Object of different users' calendar events\n    removeDialog: {\n      type: Boolean,\n      default: false\n    },\n    selectedRemoveEmail: {\n      type: String,\n      default: \"\"\n    },\n    syncWithBackend: {\n      type: Boolean,\n      default: true\n    },\n    fillSpace: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    UserAvatarContent\n  },\n  data: () => ({\n    showSubCalendars: false\n  }),\n  computed: {\n    ...mapState([\"authUser\"]),\n    allowDelete() {\n      return !(this.account.calendarType == calendarTypes.GOOGLE && this.account.email == this.authUser.email || this.toggleState);\n    },\n    accountHasError() {\n      const account = this.calendarEventsMap?.[getCalendarAccountKey(this.account.email, this.account.calendarType)];\n      return account?.error && account?.calendarEvents?.length === 0;\n    },\n    /** don't show account if in toggle state and account has an error */\n    showAccount() {\n      return !(this.toggleState && this.accountHasError);\n    },\n    reauthenticateBtnText() {\n      if (this.account.calendarType == calendarTypes.GOOGLE) {\n        return \"Calendar access not granted, click to reauthenticate\";\n      } else if (this.account.calendarType == calendarTypes.APPLE) {\n        return \"Error with Apple Calendar account, click to remove\";\n      } else if (this.account.calendarType == calendarTypes.OUTLOOK) {\n        return \"Error with Outlook Calendar account, click to remove\";\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"showError\"]),\n    addCalendarAccount() {\n      signInGoogle({\n        state: {\n          type: this.toggleState ? authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT : authTypes.ADD_CALENDAR_ACCOUNT,\n          eventId: this.eventId\n        },\n        requestCalendarPermission: true,\n        selectAccount: true\n      });\n    },\n    reauthenticateCalendarAccount() {\n      if (this.account.calendarType == calendarTypes.GOOGLE) {\n        signInGoogle({\n          state: {\n            type: this.toggleState ? authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT : authTypes.ADD_CALENDAR_ACCOUNT,\n            eventId: this.eventId\n          },\n          requestCalendarPermission: true,\n          selectAccount: false,\n          loginHint: this.account.email\n        });\n      } else if (this.account.calendarType == calendarTypes.APPLE) {\n        this.openRemoveDialog();\n      } else if (this.account.calendarType == calendarTypes.OUTLOOK) {\n        this.openRemoveDialog();\n      }\n    },\n    toggleSubCalendarAccount(enabled, subCalendarId) {\n      if (this.syncWithBackend) {\n        post(`/user/toggle-sub-calendar`, {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n          subCalendarId\n        }).catch(err => {\n          this.showError(\"There was a problem with toggling your calendar account! Please try again later.\");\n        });\n      } else {\n        this.$emit(\"toggleSubCalendarAccount\", {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n          subCalendarId\n        });\n      }\n    },\n    toggleCalendarAccount(enabled) {\n      if (!enabled) this.showSubCalendars = false;\n      if (this.syncWithBackend) {\n        post(`/user/toggle-calendar`, {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled\n        }).catch(err => {\n          this.showError(\"There was a problem with toggling your calendar account! Please try again later.\");\n        });\n      } else {\n        this.$emit(\"toggleCalendarAccount\", {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled\n        });\n      }\n    },\n    openRemoveDialog() {\n      this.$emit(\"openRemoveDialog\", {\n        email: this.account.email,\n        calendarType: this.account.calendarType\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","authTypes","calendarTypes","post","_delete","signInGoogle","getCalendarAccountKey","UserAvatarContent","name","props","toggleState","type","Boolean","default","account","Object","eventId","String","calendarEventsMap","removeDialog","selectedRemoveEmail","syncWithBackend","fillSpace","components","data","showSubCalendars","computed","allowDelete","calendarType","GOOGLE","email","authUser","accountHasError","error","calendarEvents","length","showAccount","reauthenticateBtnText","APPLE","OUTLOOK","methods","addCalendarAccount","state","ADD_CALENDAR_ACCOUNT_FROM_EDIT","ADD_CALENDAR_ACCOUNT","requestCalendarPermission","selectAccount","reauthenticateCalendarAccount","loginHint","openRemoveDialog","toggleSubCalendarAccount","enabled","subCalendarId","catch","err","showError","$emit","toggleCalendarAccount"],"sources":["src/components/settings/CalendarAccount.vue"],"sourcesContent":["<template>\n  <div v-if=\"showAccount\" class=\"tw-flex tw-flex-col\">\n    <div\n      class=\"tw-group tw-flex tw-h-10 tw-flex-row tw-items-center tw-justify-between tw-text-black\"\n    >\n      <div\n        :class=\"`tw-gap-${toggleState ? '0' : '2'}`\"\n        class=\"tw-flex tw-w-full tw-flex-row tw-items-center\"\n      >\n        <div v-if=\"toggleState\" class=\"tw-flex tw-items-center\">\n          <v-checkbox\n            v-model=\"account.enabled\"\n            @change=\"(enabled) => toggleCalendarAccount(enabled)\"\n            hide-details\n          />\n          <div\n            class=\"-tw-ml-2 tw-h-fit tw-w-fit tw-cursor-pointer\"\n            @click=\"\n              () => {\n                showSubCalendars = !showSubCalendars\n              }\n            \"\n          >\n            <!-- Make sure tailwind classes are compiled -->\n            <div class=\"tw-rotate-0 tw-rotate-90\"></div>\n\n            <v-icon\n              :class=\"`tw-rotate-${showSubCalendars ? 90 : 0}`\"\n              class=\"tw-text-dark-gray tw-transition-all\"\n              >mdi-chevron-right</v-icon\n            >\n          </div>\n        </div>\n        <UserAvatarContent v-else :size=\"24\" :user=\"account\" />\n        <div\n          :class=\"toggleState && !fillSpace ? 'tw-w-[180px]' : ''\"\n          class=\"tw-align-text-middle tw-inline-block tw-break-words tw-text-sm\"\n        >\n          {{ account.email }}\n        </div>\n        <v-tooltip top v-if=\"accountHasError\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn\n              icon\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              @click=\"reauthenticateCalendarAccount\"\n            >\n              <v-icon>mdi-alert-circle</v-icon>\n            </v-btn>\n          </template>\n          <span>{{ reauthenticateBtnText }}</span>\n        </v-tooltip>\n      </div>\n      <!-- Needed to make sure tailwind classes compile -->\n      <span class=\"tw-hidden tw-opacity-0 tw-opacity-100\"></span>\n\n      <!-- Delete account button -->\n      <v-btn\n        icon\n        :class=\"`tw-opacity-${\n          account.email == selectedRemoveEmail && removeDialog ? '100' : '0'\n        } ${!allowDelete ? 'tw-hidden' : ''}`\"\n        class=\"group-hover:tw-opacity-100\"\n        @click=\"openRemoveDialog\"\n        ><v-icon color=\"#4F4F4F\">mdi-close</v-icon></v-btn\n      >\n    </div>\n\n    <!-- Sub-calendar accounts -->\n\n    <v-expand-transition>\n      <div v-if=\"showSubCalendars\" class=\"tw-space-y-2 tw-bg-[#EBF7EF] tw-py-2\">\n        <div\n          v-for=\"(subCalendar, id) in account.subCalendars\"\n          :key=\"id\"\n          class=\"tw-flex tw-flex-row tw-items-start\"\n        >\n          <v-checkbox\n            v-model=\"subCalendar.enabled\"\n            @change=\"(enabled) => toggleSubCalendarAccount(enabled, id)\"\n            class=\"-tw-mt-px\"\n            hide-details\n          />\n          <div\n            :class=\"!fillSpace ? 'tw-w-40' : ''\"\n            class=\"tw-align-text-middle tw-ml-8 tw-inline-block tw-break-words tw-text-sm\"\n          >\n            {{ subCalendar.name }}\n          </div>\n        </div>\n      </div>\n    </v-expand-transition>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\"\nimport { authTypes, calendarTypes } from \"@/constants\"\nimport {\n  post,\n  _delete,\n  signInGoogle,\n  getCalendarAccountKey,\n} from \"@/utils\"\nimport UserAvatarContent from \"@/components/UserAvatarContent.vue\"\n\nexport default {\n  name: \"CalendarAccount\",\n\n  props: {\n    toggleState: { type: Boolean, default: false },\n    account: { type: Object, default: () => {} },\n    eventId: { type: String, default: \"\" },\n    calendarEventsMap: { type: Object, default: () => {} }, // Object of different users' calendar events\n    removeDialog: { type: Boolean, default: false },\n    selectedRemoveEmail: { type: String, default: \"\" },\n    syncWithBackend: { type: Boolean, default: true },\n    fillSpace: { type: Boolean, default: false },\n  },\n\n  components: {\n    UserAvatarContent,\n  },\n\n  data: () => ({\n    showSubCalendars: false,\n  }),\n\n  computed: {\n    ...mapState([\"authUser\"]),\n    allowDelete() {\n      return !(\n        (this.account.calendarType == calendarTypes.GOOGLE &&\n          this.account.email == this.authUser.email) ||\n        this.toggleState\n      )\n    },\n    accountHasError() {\n      const account =\n        this.calendarEventsMap?.[\n          getCalendarAccountKey(this.account.email, this.account.calendarType)\n        ]\n      return account?.error && account?.calendarEvents?.length === 0\n    },\n    /** don't show account if in toggle state and account has an error */\n    showAccount() {\n      return !(this.toggleState && this.accountHasError)\n    },\n    reauthenticateBtnText() {\n      if (this.account.calendarType == calendarTypes.GOOGLE) {\n        return \"Calendar access not granted, click to reauthenticate\"\n      } else if (this.account.calendarType == calendarTypes.APPLE) {\n        return \"Error with Apple Calendar account, click to remove\"\n      } else if (this.account.calendarType == calendarTypes.OUTLOOK) {\n        return \"Error with Outlook Calendar account, click to remove\"\n      }\n    },\n  },\n\n  methods: {\n    ...mapActions([\"showError\"]),\n    addCalendarAccount() {\n      signInGoogle({\n        state: {\n          type: this.toggleState\n            ? authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT\n            : authTypes.ADD_CALENDAR_ACCOUNT,\n          eventId: this.eventId,\n        },\n        requestCalendarPermission: true,\n        selectAccount: true,\n      })\n    },\n    reauthenticateCalendarAccount() {\n      if (this.account.calendarType == calendarTypes.GOOGLE) {\n        signInGoogle({\n          state: {\n            type: this.toggleState\n              ? authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT\n              : authTypes.ADD_CALENDAR_ACCOUNT,\n            eventId: this.eventId,\n          },\n          requestCalendarPermission: true,\n          selectAccount: false,\n          loginHint: this.account.email,\n        })\n      } else if (this.account.calendarType == calendarTypes.APPLE) {\n        this.openRemoveDialog()\n      } else if (this.account.calendarType == calendarTypes.OUTLOOK) {\n        this.openRemoveDialog()\n      }\n    },\n    toggleSubCalendarAccount(enabled, subCalendarId) {\n      if (this.syncWithBackend) {\n        post(`/user/toggle-sub-calendar`, {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n          subCalendarId,\n        }).catch((err) => {\n          this.showError(\n            \"There was a problem with toggling your calendar account! Please try again later.\"\n          )\n        })\n      } else {\n        this.$emit(\"toggleSubCalendarAccount\", {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n          subCalendarId,\n        })\n      }\n    },\n    toggleCalendarAccount(enabled) {\n\n      if (!enabled) this.showSubCalendars = false\n\n      if (this.syncWithBackend) {\n        post(`/user/toggle-calendar`, {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n        }).catch((err) => {\n          this.showError(\n            \"There was a problem with toggling your calendar account! Please try again later.\"\n          )\n        })\n      } else {\n        this.$emit(\"toggleCalendarAccount\", {\n          email: this.account.email,\n          calendarType: this.account.calendarType,\n          enabled,\n        })\n      }\n    },\n    openRemoveDialog() {\n      this.$emit(\"openRemoveDialog\", {\n        email: this.account.email,\n        calendarType: this.account.calendarType,\n      })\n    },\n  },\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}