{"ast":null,"code":"export default {\n  name: \"ExpandableSection\",\n  props: {\n    value: {\n      type: Boolean,\n      required: true\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    labelClass: {\n      type: String,\n      default: \"tw-text-base\"\n    },\n    iconClass: {\n      type: String,\n      default: \"\"\n    },\n    autoScroll: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit(\"input\", !this.value);\n    },\n    scrollToElement(element) {\n      if (this.autoScroll && element) {\n        setTimeout(() => element.scrollIntoView({\n          behavior: \"smooth\"\n        }), 200);\n      }\n    }\n  },\n  watch: {\n    value() {\n      if (this.value) {\n        this.scrollToElement(this.$refs.scrollTo);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","value","type","Boolean","required","label","String","default","labelClass","iconClass","autoScroll","methods","toggle","$emit","scrollToElement","element","setTimeout","scrollIntoView","behavior","watch","$refs","scrollTo"],"sources":["src/components/ExpandableSection.vue"],"sourcesContent":["<!--class=\"tw-flex tw-items-end tw-justify-start tw-p-1\"-->\n<template>\n  <div>\n    <v-btn\n      class=\"-tw-ml-2 tw-w-[calc(100%+1rem)] tw-justify-between tw-px-2\"\n      block\n      text\n      @click=\"toggle\"\n    >\n      <span class=\"-tw-ml-px tw-mr-1\" :class=\"labelClass\">\n        {{ label }}\n      </span>\n      <v-spacer />\n      <v-icon\n        :class=\"`tw-rotate-${value ? '180' : '0'} ${iconClass}`\"\n        :size=\"30\"\n        >mdi-chevron-down</v-icon\n      ></v-btn\n    >\n    <v-expand-transition>\n      <div v-show=\"value\">\n        <slot></slot>\n      </div>\n    </v-expand-transition>\n    <div ref=\"scrollTo\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ExpandableSection\",\n\n  props: {\n    value: { type: Boolean, required: true },\n    label: { type: String, default: \"\" },\n    labelClass: { type: String, default: \"tw-text-base\" },\n    iconClass: { type: String, default: \"\" },\n    autoScroll: { type: Boolean, default: false },\n  },\n\n  methods: {\n    toggle() {\n      this.$emit(\"input\", !this.value)\n    },\n    scrollToElement(element) {\n      if (this.autoScroll && element) {\n        setTimeout(() => element.scrollIntoView({ behavior: \"smooth\" }), 200)\n      }\n    },\n  },\n\n  watch: {\n    value() {\n      if (this.value) {\n        this.scrollToElement(this.$refs.scrollTo)\n      }\n    },\n  },\n}\n</script>\n"],"mappings":"AA6BA;EACAA,IAAA;EAEAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,OAAA;MAAAC,QAAA;IAAA;IACAC,KAAA;MAAAH,IAAA,EAAAI,MAAA;MAAAC,OAAA;IAAA;IACAC,UAAA;MAAAN,IAAA,EAAAI,MAAA;MAAAC,OAAA;IAAA;IACAE,SAAA;MAAAP,IAAA,EAAAI,MAAA;MAAAC,OAAA;IAAA;IACAG,UAAA;MAAAR,IAAA,EAAAC,OAAA;MAAAI,OAAA;IAAA;EACA;EAEAI,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,gBAAAZ,KAAA;IACA;IACAa,gBAAAC,OAAA;MACA,SAAAL,UAAA,IAAAK,OAAA;QACAC,UAAA,OAAAD,OAAA,CAAAE,cAAA;UAAAC,QAAA;QAAA;MACA;IACA;EACA;EAEAC,KAAA;IACAlB,MAAA;MACA,SAAAA,KAAA;QACA,KAAAa,eAAA,MAAAM,KAAA,CAAAC,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}