{"ast":null,"code":"import { getStartEndDateString } from \"@/utils\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"SignUpBlock\",\n  props: {\n    signUpBlock: {\n      type: Object,\n      required: true\n    },\n    isEditing: {\n      type: Boolean,\n      default: false\n    },\n    isOwner: {\n      type: Boolean,\n      default: false\n    },\n    unsaved: {\n      type: Boolean,\n      default: false\n    },\n    infoOnly: {\n      type: Boolean,\n      default: false\n    },\n    anonymous: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    capacityOptions: [...Array(100).keys()].map(i => i + 1),\n    isEditingName: false,\n    newName: \"\"\n  }),\n  computed: {\n    ...mapState([\"authUser\"]),\n    timeRangeString() {\n      return getStartEndDateString(this.signUpBlock.startDate, this.signUpBlock.endDate);\n    },\n    hasCapacity() {\n      return !this.signUpBlock.responses || this.signUpBlock.capacity > this.signUpBlock.responses.length;\n    },\n    numberResponses() {\n      return this.signUpBlock.responses ? this.signUpBlock.responses.length : 0;\n    },\n    anonymize() {\n      return this.anonymous && !this.isOwner;\n    }\n  },\n  methods: {\n    saveName() {\n      this.$emit(\"update:signUpBlock\", {\n        ...this.signUpBlock,\n        name: this.newName\n      });\n      this.isEditingName = false;\n    },\n    cancelEditName() {\n      this.newName = this.signUpBlock.name;\n      this.isEditingName = false;\n    },\n    joinSlot() {\n      if (!this.isOwner) this.$emit('signUpForBlock', this.signUpBlock);\n    }\n  },\n  watch: {\n    signUpBlock: {\n      immediate: true,\n      handler(newVal) {\n        this.newName = newVal.name;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getStartEndDateString","mapState","name","props","signUpBlock","type","Object","required","isEditing","Boolean","default","isOwner","unsaved","infoOnly","anonymous","data","capacityOptions","Array","keys","map","i","isEditingName","newName","computed","timeRangeString","startDate","endDate","hasCapacity","responses","capacity","length","numberResponses","anonymize","methods","saveName","$emit","cancelEditName","joinSlot","watch","immediate","handler","newVal"],"sources":["src/components/sign_up_form/SignUpBlock.vue"],"sourcesContent":["<template>\n  <div\n    :data-id=\"signUpBlock._id\"\n    class=\"tw-flex tw-flex-col tw-rounded-md tw-border-[1px] tw-p-4\"\n    :class=\"unsaved ? 'tw-border-light-green' : 'tw-border-light-gray-stroke'\"\n  >\n    <div class=\"tw-flex tw-items-start tw-justify-between mb-1\">\n      <div\n        v-if=\"!isEditingName\"\n        class=\"tw-flex tw-items-center tw-gap-2 tw-font-medium\"\n      >\n        <div>\n          {{ isEditing ? newName : signUpBlock.name }}\n        </div>\n        <div>\n          (<span :class=\"!hasCapacity && 'tw-text-green'\">{{ numberResponses }}/{{ signUpBlock.capacity }}</span>)\n        </div>\n        <v-btn v-if=\"isEditing\" icon x-small @click=\"isEditingName = true\">\n          <v-icon x-small>mdi-pencil</v-icon>\n        </v-btn>\n      </div>\n      <div\n        v-else\n        class=\"-tw-mt-[6px] tw-flex tw-w-full tw-items-center tw-gap-2\"\n      >\n        <v-text-field\n          v-model=\"newName\"\n          dense\n          hide-details\n          autofocus\n          @keyup.enter=\"saveName\"\n        ></v-text-field>\n        <v-btn icon small @click=\"cancelEditName\">\n          <v-icon small>mdi-undo</v-icon>\n        </v-btn>\n        <v-btn icon small color=\"primary\" @click=\"saveName\">\n          <v-icon small>mdi-check</v-icon>\n        </v-btn>\n      </div>\n    </div>\n    <div class=\"tw-text-xs tw-italic tw-text-dark-gray\">\n      {{ timeRangeString }}\n    </div>\n    <div v-if=\"isOwner\" class=\"tw-mt-4 tw-flex tw-items-center tw-gap-4\">\n      <div class=\"tw-text-xs\">People per slot</div>\n      <div class=\"tw-flex tw-h-4 tw-items-center\">\n        <div v-if=\"isEditing\" class=\"-tw-mt-2 tw-w-20\">\n          <v-select\n            :value=\"signUpBlock.capacity\"\n            @input=\"\n              $emit('update:signUpBlock', {\n                ...signUpBlock,\n                capacity: $event,\n              })\n            \"\n            class=\"tw-text-xs\"\n            menu-props=\"auto\"\n            :items=\"capacityOptions\"\n            hide-details\n            dense\n          ></v-select>\n        </div>\n        <div v-else class=\"tw-text-xs\">{{ signUpBlock.capacity }}</div>\n      </div>\n    </div>\n\n    <div v-if=\"signUpBlock.responses\" class=\"tw-mt-2\">\n      <div\n        v-for=\"(response, i) in signUpBlock.responses\"\n        :key=\"i\"\n        class=\"tw-relative tw-flex tw-items-center\"\n      >\n        <div class=\"tw-ml-1 tw-mr-2\">\n          <v-avatar v-if=\"response.user.picture != '' && (!anonymize || response.user._id == authUser._id)\" :size=\"16\">\n            <img\n              v-if=\"response.user.picture\"\n              :src=\"response.user.picture\"\n              referrerpolicy=\"no-referrer\"\n            />\n          </v-avatar>\n          <v-avatar v-else :size=\"16\">\n            <v-icon small>mdi-account</v-icon>\n          </v-avatar>\n        </div>\n        <div v-if=\"!anonymize || response.user._id == authUser._id\" class=\"tw-transition-all tw-text-sm\">\n          {{ response.user.firstName + \" \" + response.user.lastName }}\n        </div>\n        <div v-else class=\"tw-transition-all tw-text-sm tw-italic\">Attendee</div>\n      </div>\n    </div>\n\n    <div v-if=\"isEditing\" class=\"tw-mt-2\">\n      <a\n        class=\"tw-text-xs tw-text-red\"\n        text\n        @click=\"$emit('delete:signUpBlock', signUpBlock._id)\"\n        >Delete slot</a\n      >\n    </div>\n\n    <div v-if=\"!isOwner && hasCapacity && !infoOnly\" class=\"tw-mt-2\">\n      <a\n        class=\"tw-text-xs tw-text-green\"\n        text\n        @click=\"joinSlot\"\n        >+ Join this slot</a\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getStartEndDateString } from \"@/utils\"\nimport { mapState } from \"vuex\"\n\nexport default {\n  name: \"SignUpBlock\",\n\n  props: {\n    signUpBlock: { type: Object, required: true },\n    isEditing: { type: Boolean, default: false },\n    isOwner: { type: Boolean, default: false },\n    unsaved: { type: Boolean, default: false },\n    infoOnly: { type: Boolean, default: false },\n    anonymous: { type: Boolean, default: false },\n  },\n\n  data: () => ({\n    capacityOptions: [...Array(100).keys()].map((i) => i + 1),\n    isEditingName: false,\n    newName: \"\",\n  }),\n\n  computed: {\n    ...mapState([\"authUser\"]),\n    timeRangeString() {\n      return getStartEndDateString(\n        this.signUpBlock.startDate,\n        this.signUpBlock.endDate\n      )\n    },\n    hasCapacity() {\n      return (\n        !this.signUpBlock.responses ||\n        this.signUpBlock.capacity > this.signUpBlock.responses.length\n      )\n    },\n    numberResponses() {\n      return this.signUpBlock.responses ? this.signUpBlock.responses.length : 0\n    },\n    anonymize() {\n      return this.anonymous && !this.isOwner\n    }\n  },\n\n  methods: {\n    saveName() {\n      this.$emit(\"update:signUpBlock\", {\n        ...this.signUpBlock,\n        name: this.newName,\n      })\n      this.isEditingName = false\n    },\n    cancelEditName() {\n      this.newName = this.signUpBlock.name\n      this.isEditingName = false\n    },\n    joinSlot() {\n      if (!this.isOwner) this.$emit('signUpForBlock', this.signUpBlock)\n    }\n  },\n\n  watch: {\n    signUpBlock: {\n      immediate: true,\n      handler(newVal) {\n        this.newName = newVal.name\n      },\n    },\n  },\n}\n</script>\n"],"mappings":"AAgHA,SAAAA,qBAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,WAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IACAC,SAAA;MAAAH,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAC,OAAA;MAAAN,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAE,OAAA;MAAAP,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAG,QAAA;MAAAR,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAI,SAAA;MAAAT,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;EACA;EAEAK,IAAA,EAAAA,CAAA;IACAC,eAAA,MAAAC,KAAA,MAAAC,IAAA,IAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA;IACAC,aAAA;IACAC,OAAA;EACA;EAEAC,QAAA;IACA,GAAAtB,QAAA;IACAuB,gBAAA;MACA,OAAAxB,qBAAA,CACA,KAAAI,WAAA,CAAAqB,SAAA,EACA,KAAArB,WAAA,CAAAsB,OACA;IACA;IACAC,YAAA;MACA,OACA,MAAAvB,WAAA,CAAAwB,SAAA,IACA,KAAAxB,WAAA,CAAAyB,QAAA,QAAAzB,WAAA,CAAAwB,SAAA,CAAAE,MAAA;IAEA;IACAC,gBAAA;MACA,YAAA3B,WAAA,CAAAwB,SAAA,QAAAxB,WAAA,CAAAwB,SAAA,CAAAE,MAAA;IACA;IACAE,UAAA;MACA,YAAAlB,SAAA,UAAAH,OAAA;IACA;EACA;EAEAsB,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA;QACA,QAAA/B,WAAA;QACAF,IAAA,OAAAoB;MACA;MACA,KAAAD,aAAA;IACA;IACAe,eAAA;MACA,KAAAd,OAAA,QAAAlB,WAAA,CAAAF,IAAA;MACA,KAAAmB,aAAA;IACA;IACAgB,SAAA;MACA,UAAA1B,OAAA,OAAAwB,KAAA,wBAAA/B,WAAA;IACA;EACA;EAEAkC,KAAA;IACAlC,WAAA;MACAmC,SAAA;MACAC,QAAAC,MAAA;QACA,KAAAnB,OAAA,GAAAmB,MAAA,CAAAvC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}