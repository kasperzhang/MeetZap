{"ast":null,"code":"import { calendarTypes } from \"@/constants\";\nimport store from \"@/store\";\n\n/** Redirects user to the correct google sign in page */\nexport const signInGoogle = ({\n  state = {},\n  selectAccount = false,\n  requestCalendarPermission = false,\n  requestContactsPermission = false,\n  loginHint = \"\"\n}) => {\n  const clientId = \"523323684219-jfakov2bgsleeb6den4ktpohq4lcnae2.apps.googleusercontent.com\";\n  const redirectUri = `${window.location.origin}/auth`;\n  let scope = \"openid email profile \";\n  if (requestCalendarPermission) {\n    scope += \"https://www.googleapis.com/auth/calendar.calendarlist.readonly https://www.googleapis.com/auth/calendar.events.readonly \";\n  }\n  if (requestContactsPermission) {\n    scope += \"https://www.googleapis.com/auth/contacts.readonly https://www.googleapis.com/auth/directory.readonly \";\n  }\n  scope = encodeURIComponent(scope);\n  let stateString = \"\";\n  if (!state) state = {};\n  state.calendarType = calendarTypes.GOOGLE;\n  state = encodeURIComponent(JSON.stringify(state));\n  stateString = `&state=${state}`;\n  let promptString = \"\";\n  if (selectAccount) {\n    promptString = \"&prompt=select_account+consent\";\n  } else {\n    promptString = \"&prompt=consent\";\n    if (loginHint.length > 0) {\n      promptString += `&login_hint=${loginHint}`;\n    } else if (store.state.authUser) {\n      promptString += `&login_hint=${store.state.authUser.email}`;\n    }\n  }\n  const url = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=${scope}&access_type=offline${promptString}${stateString}&include_granted_scopes=true`;\n  window.location.href = url;\n};\nexport const signInOutlook = ({\n  state = {},\n  requestCalendarPermission = false\n}) => {\n  const clientId = \"d27c1c46-4be7-45c4-ad98-626b2fa3a527\";\n  const tenant = \"common\";\n  const redirectUri = encodeURIComponent(`${window.location.origin}/auth`);\n  let scope = \"offline_access User.Read\";\n  if (requestCalendarPermission) {\n    scope += \" Calendars.Read\";\n  }\n  scope = encodeURIComponent(scope);\n  let stateString = \"\";\n  if (!state) state = {};\n  state.calendarType = calendarTypes.OUTLOOK;\n  state.scope = scope;\n  state = encodeURIComponent(JSON.stringify(state));\n  stateString = `&state=${state}`;\n  const url = `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&response_mode=query&scope=${scope}${stateString}`;\n  window.location.href = url;\n};","map":{"version":3,"names":["calendarTypes","store","signInGoogle","state","selectAccount","requestCalendarPermission","requestContactsPermission","loginHint","clientId","redirectUri","window","location","origin","scope","encodeURIComponent","stateString","calendarType","GOOGLE","JSON","stringify","promptString","length","authUser","email","url","href","signInOutlook","tenant","OUTLOOK"],"sources":["/Users/kasperzhang/Desktop/MeetZap/frontend/src/utils/sign_in_utils.js"],"sourcesContent":["import { calendarTypes } from \"@/constants\"\nimport store from \"@/store\"\n\n/** Redirects user to the correct google sign in page */\nexport const signInGoogle = ({\n  state = {},\n  selectAccount = false,\n  requestCalendarPermission = false,\n  requestContactsPermission = false,\n  loginHint = \"\",\n}) => {\n  const clientId =\n    \"523323684219-jfakov2bgsleeb6den4ktpohq4lcnae2.apps.googleusercontent.com\"\n  const redirectUri = `${window.location.origin}/auth`\n\n  let scope = \"openid email profile \"\n  if (requestCalendarPermission) {\n    scope +=\n      \"https://www.googleapis.com/auth/calendar.calendarlist.readonly https://www.googleapis.com/auth/calendar.events.readonly \"\n  }\n  if (requestContactsPermission) {\n    scope +=\n      \"https://www.googleapis.com/auth/contacts.readonly https://www.googleapis.com/auth/directory.readonly \"\n  }\n  scope = encodeURIComponent(scope)\n\n  let stateString = \"\"\n  if (!state) state = {}\n  state.calendarType = calendarTypes.GOOGLE\n  state = encodeURIComponent(JSON.stringify(state))\n  stateString = `&state=${state}`\n\n  let promptString = \"\"\n  if (selectAccount) {\n    promptString = \"&prompt=select_account+consent\"\n  } else {\n    promptString = \"&prompt=consent\"\n    if (loginHint.length > 0) {\n      promptString += `&login_hint=${loginHint}`\n    } else if (store.state.authUser) {\n      promptString += `&login_hint=${store.state.authUser.email}`\n    }\n  }\n\n  const url = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=${scope}&access_type=offline${promptString}${stateString}&include_granted_scopes=true`\n  window.location.href = url\n}\n\nexport const signInOutlook = ({\n  state = {},\n  requestCalendarPermission = false,\n}) => {\n  const clientId = \"d27c1c46-4be7-45c4-ad98-626b2fa3a527\"\n  const tenant = \"common\"\n  const redirectUri = encodeURIComponent(`${window.location.origin}/auth`)\n\n  let scope = \"offline_access User.Read\"\n  if (requestCalendarPermission) {\n    scope += \" Calendars.Read\"\n  }\n  scope = encodeURIComponent(scope)\n\n  let stateString = \"\"\n  if (!state) state = {}\n  state.calendarType = calendarTypes.OUTLOOK\n  state.scope = scope\n  state = encodeURIComponent(JSON.stringify(state))\n  stateString = `&state=${state}`\n\n  const url = `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&response_mode=query&scope=${scope}${stateString}`\n  window.location.href = url\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAC3C,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAC3BC,KAAK,GAAG,CAAC,CAAC;EACVC,aAAa,GAAG,KAAK;EACrBC,yBAAyB,GAAG,KAAK;EACjCC,yBAAyB,GAAG,KAAK;EACjCC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAMC,QAAQ,GACZ,0EAA0E;EAC5E,MAAMC,WAAW,GAAI,GAAEC,MAAM,CAACC,QAAQ,CAACC,MAAO,OAAM;EAEpD,IAAIC,KAAK,GAAG,uBAAuB;EACnC,IAAIR,yBAAyB,EAAE;IAC7BQ,KAAK,IACH,0HAA0H;EAC9H;EACA,IAAIP,yBAAyB,EAAE;IAC7BO,KAAK,IACH,uGAAuG;EAC3G;EACAA,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAAC;EAEjC,IAAIE,WAAW,GAAG,EAAE;EACpB,IAAI,CAACZ,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;EACtBA,KAAK,CAACa,YAAY,GAAGhB,aAAa,CAACiB,MAAM;EACzCd,KAAK,GAAGW,kBAAkB,CAACI,IAAI,CAACC,SAAS,CAAChB,KAAK,CAAC,CAAC;EACjDY,WAAW,GAAI,UAASZ,KAAM,EAAC;EAE/B,IAAIiB,YAAY,GAAG,EAAE;EACrB,IAAIhB,aAAa,EAAE;IACjBgB,YAAY,GAAG,gCAAgC;EACjD,CAAC,MAAM;IACLA,YAAY,GAAG,iBAAiB;IAChC,IAAIb,SAAS,CAACc,MAAM,GAAG,CAAC,EAAE;MACxBD,YAAY,IAAK,eAAcb,SAAU,EAAC;IAC5C,CAAC,MAAM,IAAIN,KAAK,CAACE,KAAK,CAACmB,QAAQ,EAAE;MAC/BF,YAAY,IAAK,eAAcnB,KAAK,CAACE,KAAK,CAACmB,QAAQ,CAACC,KAAM,EAAC;IAC7D;EACF;EAEA,MAAMC,GAAG,GAAI,0DAAyDhB,QAAS,iBAAgBC,WAAY,6BAA4BI,KAAM,uBAAsBO,YAAa,GAAEL,WAAY,8BAA6B;EAC3NL,MAAM,CAACC,QAAQ,CAACc,IAAI,GAAGD,GAAG;AAC5B,CAAC;AAED,OAAO,MAAME,aAAa,GAAGA,CAAC;EAC5BvB,KAAK,GAAG,CAAC,CAAC;EACVE,yBAAyB,GAAG;AAC9B,CAAC,KAAK;EACJ,MAAMG,QAAQ,GAAG,sCAAsC;EACvD,MAAMmB,MAAM,GAAG,QAAQ;EACvB,MAAMlB,WAAW,GAAGK,kBAAkB,CAAE,GAAEJ,MAAM,CAACC,QAAQ,CAACC,MAAO,OAAM,CAAC;EAExE,IAAIC,KAAK,GAAG,0BAA0B;EACtC,IAAIR,yBAAyB,EAAE;IAC7BQ,KAAK,IAAI,iBAAiB;EAC5B;EACAA,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAAC;EAEjC,IAAIE,WAAW,GAAG,EAAE;EACpB,IAAI,CAACZ,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;EACtBA,KAAK,CAACa,YAAY,GAAGhB,aAAa,CAAC4B,OAAO;EAC1CzB,KAAK,CAACU,KAAK,GAAGA,KAAK;EACnBV,KAAK,GAAGW,kBAAkB,CAACI,IAAI,CAACC,SAAS,CAAChB,KAAK,CAAC,CAAC;EACjDY,WAAW,GAAI,UAASZ,KAAM,EAAC;EAE/B,MAAMqB,GAAG,GAAI,4EAA2EhB,QAAS,oCAAmCC,WAAY,8BAA6BI,KAAM,GAAEE,WAAY,EAAC;EAClML,MAAM,CAACC,QAAQ,CAACc,IAAI,GAAGD,GAAG;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}