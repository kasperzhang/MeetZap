{"ast":null,"code":"import { isPhone, dateToDowDate } from \"@/utils\";\nimport dayjs from \"dayjs\";\nexport default {\n  name: \"GCalWeekSelector\",\n  props: {\n    weekOffset: {\n      type: Number,\n      required: true\n    },\n    startOnMonday: {\n      type: Boolean,\n      default: false\n    },\n    event: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    isPhone() {\n      return isPhone(this.$vuetify);\n    },\n    weekText() {\n      const date = dateToDowDate(this.event.dates, this.event.dates[0], this.weekOffset, true);\n      // Set date to the Sunday of the current week\n      date.setDate(date.getDate() - date.getDay());\n      if (this.startOnMonday) {\n        date.setDate(date.getDate() + 1);\n      }\n      return dayjs(date).format(\"M/D\");\n    }\n  },\n  methods: {\n    nextWeek() {\n      this.$emit(\"update:weekOffset\", this.weekOffset + 1);\n    },\n    prevWeek() {\n      this.$emit(\"update:weekOffset\", this.weekOffset - 1);\n    }\n  }\n};","map":{"version":3,"names":["isPhone","dateToDowDate","dayjs","name","props","weekOffset","type","Number","required","startOnMonday","Boolean","default","event","Object","data","computed","$vuetify","weekText","date","dates","setDate","getDate","getDay","format","methods","nextWeek","$emit","prevWeek"],"sources":["src/components/schedule_overlap/GCalWeekSelector.vue"],"sourcesContent":["<template>\n  <div\n    class=\"tw-flex tw-h-16 tw-items-center tw-justify-between tw-gap-2 tw-bg-white tw-px-2 tw-drop-shadow sm:tw-h-[unset] sm:tw-flex-1 sm:tw-px-0 sm:tw-drop-shadow-none\"\n  >\n    <v-btn @click=\"prevWeek\" icon><v-icon>mdi-chevron-left</v-icon></v-btn>\n    <div class=\"tw-text-center\">\n      Showing calendar for week of {{ weekText }}\n    </div>\n    <v-btn @click=\"nextWeek\" icon><v-icon>mdi-chevron-right</v-icon></v-btn>\n  </div>\n</template>\n\n<script>\nimport { isPhone, dateToDowDate } from \"@/utils\"\nimport dayjs from \"dayjs\"\n\nexport default {\n  name: \"GCalWeekSelector\",\n\n  props: {\n    weekOffset: { type: Number, required: true },\n    startOnMonday: { type: Boolean, default: false },\n    event: { type: Object, required: true },\n  },\n\n  data() {\n    return {}\n  },\n\n  computed: {\n    isPhone() {\n      return isPhone(this.$vuetify)\n    },\n    weekText() {\n      const date = dateToDowDate(\n        this.event.dates,\n        this.event.dates[0],\n        this.weekOffset,\n        true\n      )\n      // Set date to the Sunday of the current week\n      date.setDate(date.getDate() - date.getDay())\n\n      if (this.startOnMonday) {\n        date.setDate(date.getDate() + 1)\n      }\n\n      return dayjs(date).format(\"M/D\")\n    },\n  },\n\n  methods: {\n    nextWeek() {\n      this.$emit(\"update:weekOffset\", this.weekOffset + 1)\n    },\n    prevWeek() {\n      this.$emit(\"update:weekOffset\", this.weekOffset - 1)\n    },\n  },\n}\n</script>\n"],"mappings":"AAaA,SAAAA,OAAA,EAAAC,aAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,UAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IACAC,aAAA;MAAAH,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAC,KAAA;MAAAN,IAAA,EAAAO,MAAA;MAAAL,QAAA;IAAA;EACA;EAEAM,KAAA;IACA;EACA;EAEAC,QAAA;IACAf,QAAA;MACA,OAAAA,OAAA,MAAAgB,QAAA;IACA;IACAC,SAAA;MACA,MAAAC,IAAA,GAAAjB,aAAA,CACA,KAAAW,KAAA,CAAAO,KAAA,EACA,KAAAP,KAAA,CAAAO,KAAA,KACA,KAAAd,UAAA,EACA,IACA;MACA;MACAa,IAAA,CAAAE,OAAA,CAAAF,IAAA,CAAAG,OAAA,KAAAH,IAAA,CAAAI,MAAA;MAEA,SAAAb,aAAA;QACAS,IAAA,CAAAE,OAAA,CAAAF,IAAA,CAAAG,OAAA;MACA;MAEA,OAAAnB,KAAA,CAAAgB,IAAA,EAAAK,MAAA;IACA;EACA;EAEAC,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,2BAAArB,UAAA;IACA;IACAsB,SAAA;MACA,KAAAD,KAAA,2BAAArB,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}