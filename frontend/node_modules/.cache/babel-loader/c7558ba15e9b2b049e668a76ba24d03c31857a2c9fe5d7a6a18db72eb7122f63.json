{"ast":null,"code":"export default {\n  name: \"PronunciationMenu\",\n  data() {\n    return {\n      isMenuOpen: false,\n      currentImageIndex: 0,\n      images: [require(\"@/assets/doodles/pronunciation/0.jpg\"), require(\"@/assets/doodles/pronunciation/1.jpg\"), require(\"@/assets/doodles/pronunciation/2.jpg\"), require(\"@/assets/doodles/pronunciation/3.jpg\"), require(\"@/assets/doodles/pronunciation/4.jpg\")],\n      animationInterval: null,\n      animationSpeedMs: 200 // Speed of animation frame change\n    };\n  },\n  computed: {\n    currentImageSrc() {\n      return this.images[this.currentImageIndex];\n    }\n  },\n  methods: {\n    handleMenuStateChange(isOpen) {\n      this.isMenuOpen = isOpen;\n      if (isOpen) {\n        this.startAnimationAndAudio();\n      } else {\n        this.stopAnimationAndAudio();\n      }\n    },\n    startAnimationAndAudio() {\n      this.currentImageIndex = 1; // Always start from the first image\n\n      if (this.animationInterval) {\n        clearInterval(this.animationInterval);\n      }\n      this.animationInterval = setInterval(() => {\n        if (this.currentImageIndex < this.images.length - 1) {\n          this.currentImageIndex++;\n        } else {\n          // Last image reached, stop interval and reset to first image (0.jpg)\n          clearInterval(this.animationInterval);\n          this.animationInterval = null;\n          // Set a timeout to show 0.jpg for a bit after the animation completes\n          // before truly resetting if the menu is still open. Or just set to 0.\n          setTimeout(() => {\n            // Check if menu is still open before resetting to 0 if desired\n            // This ensures it ends on 0.jpg visibly after the animation sequence\n            this.currentImageIndex = 0;\n          }, this.animationSpeedMs);\n        }\n      }, this.animationSpeedMs);\n      if (this.$refs.pronunciationAudio) {\n        this.$refs.pronunciationAudio.currentTime = 0;\n        this.$refs.pronunciationAudio.play().catch(error => {\n          console.warn(\"Audio play prevented: \", error);\n        });\n      }\n    },\n    stopAnimationAndAudio() {\n      if (this.animationInterval) {\n        clearInterval(this.animationInterval);\n        this.animationInterval = null;\n      }\n      this.currentImageIndex = 0; // Reset to the first image on close\n\n      if (this.$refs.pronunciationAudio) {\n        this.$refs.pronunciationAudio.pause();\n        this.$refs.pronunciationAudio.currentTime = 0;\n      }\n    }\n  },\n  beforeDestroy() {\n    if (this.animationInterval) {\n      clearInterval(this.animationInterval);\n    }\n    // Ensure audio is stopped and cleaned up if component is destroyed while menu is open\n    if (this.$refs.pronunciationAudio) {\n      this.$refs.pronunciationAudio.pause();\n      this.$refs.pronunciationAudio.currentTime = 0;\n    }\n  }\n};","map":{"version":3,"names":["name","data","isMenuOpen","currentImageIndex","images","require","animationInterval","animationSpeedMs","computed","currentImageSrc","methods","handleMenuStateChange","isOpen","startAnimationAndAudio","stopAnimationAndAudio","clearInterval","setInterval","length","setTimeout","$refs","pronunciationAudio","currentTime","play","catch","error","console","warn","pause","beforeDestroy"],"sources":["src/components/PronunciationMenu.vue"],"sourcesContent":["<template>\n  <v-menu\n    :nudge-bottom=\"10\"\n    offset-y\n    :close-on-content-click=\"false\"\n    @input=\"handleMenuStateChange\"\n  >\n    <template v-slot:activator=\"{ on, attrs }\">\n      <span\n        class=\"tw-cursor-pointer\"\n        :class=\"{\n          'tw-underline': isMenuOpen,\n          'hover:tw-underline': !isMenuOpen,\n        }\"\n        v-bind=\"attrs\"\n        v-on=\"on\"ß\n      >\n        轻松找到适合所有人的时间\n      </span>\n    </template>\n    <v-card class=\"tw-p-3 tw-text-center\">\n      <div class=\"tw-text-left tw-text-sm\">\n        Pronounced like \"schedule\" but shorter - \"skej\"\n      </div>\n      <div\n        class=\"pronunciation-image-container tw-mt-3 tw-flex tw-items-center tw-justify-center\"\n      >\n        <img\n          :src=\"currentImageSrc\"\n          alt=\"Schej pronunciation animation\"\n          class=\"pronunciation-animation-image\"\n        />\n      </div>\n      <audio ref=\"pronunciationAudio\" controls class=\"tw-hidden\" autoplay>\n        <source\n          src=\"@/assets/audio/schej_pronunciation.mp3\"\n          type=\"audio/mpeg\"\n        />\n        Your browser does not support the audio element.\n      </audio>\n    </v-card>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"PronunciationMenu\",\n  data() {\n    return {\n      isMenuOpen: false,\n      currentImageIndex: 0,\n      images: [\n        require(\"@/assets/doodles/pronunciation/0.jpg\"),\n        require(\"@/assets/doodles/pronunciation/1.jpg\"),\n        require(\"@/assets/doodles/pronunciation/2.jpg\"),\n        require(\"@/assets/doodles/pronunciation/3.jpg\"),\n        require(\"@/assets/doodles/pronunciation/4.jpg\"),\n      ],\n      animationInterval: null,\n      animationSpeedMs: 200, // Speed of animation frame change\n    }\n  },\n  computed: {\n    currentImageSrc() {\n      return this.images[this.currentImageIndex]\n    },\n  },\n  methods: {\n    handleMenuStateChange(isOpen) {\n      this.isMenuOpen = isOpen\n      if (isOpen) {\n        this.startAnimationAndAudio()\n      } else {\n        this.stopAnimationAndAudio()\n      }\n    },\n    startAnimationAndAudio() {\n      this.currentImageIndex = 1 // Always start from the first image\n\n      if (this.animationInterval) {\n        clearInterval(this.animationInterval)\n      }\n\n      this.animationInterval = setInterval(() => {\n        if (this.currentImageIndex < this.images.length - 1) {\n          this.currentImageIndex++\n        } else {\n          // Last image reached, stop interval and reset to first image (0.jpg)\n          clearInterval(this.animationInterval)\n          this.animationInterval = null\n          // Set a timeout to show 0.jpg for a bit after the animation completes\n          // before truly resetting if the menu is still open. Or just set to 0.\n          setTimeout(() => {\n            // Check if menu is still open before resetting to 0 if desired\n            // This ensures it ends on 0.jpg visibly after the animation sequence\n            this.currentImageIndex = 0\n          }, this.animationSpeedMs)\n        }\n      }, this.animationSpeedMs)\n\n      if (this.$refs.pronunciationAudio) {\n        this.$refs.pronunciationAudio.currentTime = 0\n        this.$refs.pronunciationAudio.play().catch((error) => {\n          console.warn(\"Audio play prevented: \", error)\n        })\n      }\n    },\n    stopAnimationAndAudio() {\n      if (this.animationInterval) {\n        clearInterval(this.animationInterval)\n        this.animationInterval = null\n      }\n      this.currentImageIndex = 0 // Reset to the first image on close\n\n      if (this.$refs.pronunciationAudio) {\n        this.$refs.pronunciationAudio.pause()\n        this.$refs.pronunciationAudio.currentTime = 0\n      }\n    },\n  },\n  beforeDestroy() {\n    if (this.animationInterval) {\n      clearInterval(this.animationInterval)\n    }\n    // Ensure audio is stopped and cleaned up if component is destroyed while menu is open\n    if (this.$refs.pronunciationAudio) {\n      this.$refs.pronunciationAudio.pause()\n      this.$refs.pronunciationAudio.currentTime = 0\n    }\n  },\n}\n</script>\n\n<style scoped>\n.pronunciation-image-container {\n  min-height: 100px; /* Example: Adjust to your image's aspect ratio or desired space */\n}\n.pronunciation-animation-image {\n  max-width: 100%;\n  max-height: 100px; /* Example: Adjust as needed */\n  object-fit: contain;\n}\n</style>\n"],"mappings":"AA6CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,iBAAA;MACAC,MAAA,GACAC,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,yCACA;MACAC,iBAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACAC,gBAAA;MACA,YAAAL,MAAA,MAAAD,iBAAA;IACA;EACA;EACAO,OAAA;IACAC,sBAAAC,MAAA;MACA,KAAAV,UAAA,GAAAU,MAAA;MACA,IAAAA,MAAA;QACA,KAAAC,sBAAA;MACA;QACA,KAAAC,qBAAA;MACA;IACA;IACAD,uBAAA;MACA,KAAAV,iBAAA;;MAEA,SAAAG,iBAAA;QACAS,aAAA,MAAAT,iBAAA;MACA;MAEA,KAAAA,iBAAA,GAAAU,WAAA;QACA,SAAAb,iBAAA,QAAAC,MAAA,CAAAa,MAAA;UACA,KAAAd,iBAAA;QACA;UACA;UACAY,aAAA,MAAAT,iBAAA;UACA,KAAAA,iBAAA;UACA;UACA;UACAY,UAAA;YACA;YACA;YACA,KAAAf,iBAAA;UACA,QAAAI,gBAAA;QACA;MACA,QAAAA,gBAAA;MAEA,SAAAY,KAAA,CAAAC,kBAAA;QACA,KAAAD,KAAA,CAAAC,kBAAA,CAAAC,WAAA;QACA,KAAAF,KAAA,CAAAC,kBAAA,CAAAE,IAAA,GAAAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,IAAA,2BAAAF,KAAA;QACA;MACA;IACA;IACAV,sBAAA;MACA,SAAAR,iBAAA;QACAS,aAAA,MAAAT,iBAAA;QACA,KAAAA,iBAAA;MACA;MACA,KAAAH,iBAAA;;MAEA,SAAAgB,KAAA,CAAAC,kBAAA;QACA,KAAAD,KAAA,CAAAC,kBAAA,CAAAO,KAAA;QACA,KAAAR,KAAA,CAAAC,kBAAA,CAAAC,WAAA;MACA;IACA;EACA;EACAO,cAAA;IACA,SAAAtB,iBAAA;MACAS,aAAA,MAAAT,iBAAA;IACA;IACA;IACA,SAAAa,KAAA,CAAAC,kBAAA;MACA,KAAAD,KAAA,CAAAC,kBAAA,CAAAO,KAAA;MACA,KAAAR,KAAA,CAAAC,kBAAA,CAAAC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}