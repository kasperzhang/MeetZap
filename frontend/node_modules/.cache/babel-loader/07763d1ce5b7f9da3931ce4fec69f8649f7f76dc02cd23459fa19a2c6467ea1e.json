{"ast":null,"code":"import { get, isPhone, signInGoogle } from \"@/utils\";\nimport { authTypes } from \"@/constants\";\nimport CalendarPermissionsCard from \"@/components/calendar_permission_dialogs/CalendarPermissionsCard.vue\";\nimport SignInNotSupportedDialog from \"@/components/SignInNotSupportedDialog.vue\";\nimport UserAvatarContent from \"@/components/UserAvatarContent.vue\";\nimport isWebview from \"is-ua-webview\";\nexport default {\n  name: \"NotSignedIn\",\n  props: {\n    event: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    CalendarPermissionsCard,\n    SignInNotSupportedDialog,\n    UserAvatarContent\n  },\n  data() {\n    return {\n      owner: {},\n      loaded: false,\n      calendarPermissionsDialog: false,\n      webviewDialog: false\n    };\n  },\n  computed: {\n    isPhone() {\n      return isPhone(this.$vuetify);\n    }\n  },\n  methods: {\n    join() {\n      this.calendarPermissionsDialog = true;\n    },\n    allowCalendarAccess() {\n      if (isWebview(navigator.userAgent)) {\n        this.webviewDialog = true;\n        return;\n      }\n\n      // Ask the user to select the account they want to sign in with if not logged in yet\n      signInGoogle({\n        state: {\n          type: authTypes.GROUP_SIGN_IN,\n          groupId: this.$route.params.groupId\n        },\n        selectAccount: true,\n        requestCalendarPermission: true\n      });\n    },\n    signIn() {\n      if (isWebview(navigator.userAgent)) {\n        this.webviewDialog = true;\n        return;\n      }\n      const state = {\n        type: authTypes.GROUP_SIGN_IN,\n        groupId: this.$route.params.groupId\n      };\n      signInGoogle({\n        state,\n        selectAccount: true\n      });\n    }\n  },\n  async created() {\n    this.owner = await get(`/users/${this.event.ownerId}`);\n    this.loaded = true;\n  }\n};","map":{"version":3,"names":["get","isPhone","signInGoogle","authTypes","CalendarPermissionsCard","SignInNotSupportedDialog","UserAvatarContent","isWebview","name","props","event","type","Object","required","components","data","owner","loaded","calendarPermissionsDialog","webviewDialog","computed","$vuetify","methods","join","allowCalendarAccess","navigator","userAgent","state","GROUP_SIGN_IN","groupId","$route","params","selectAccount","requestCalendarPermission","signIn","created","ownerId"],"sources":["src/components/groups/NotSignedIn.vue"],"sourcesContent":["<template>\n  <v-fade-transition>\n    <div\n      v-if=\"loaded\"\n      class=\"tw-flex tw-h-full tw-flex-col tw-items-center tw-justify-center tw-p-2\"\n    >\n      <div class=\"tw-mb-8 tw-flex tw-max-w-[26rem] tw-flex-col tw-items-center\">\n        <UserAvatarContent\n          :user=\"owner\"\n          :size=\"90\"\n          class=\"tw-mb-4 tw-text-center\"\n        />\n        <h1 class=\"tw-mb-2 tw-text-center tw-text-xl tw-font-medium\">\n          {{ owner.firstName ?? \"\" }} invited you to join <br />\"{{\n            event.name\n          }}\"\n        </h1>\n        <div class=\"tw-text-center tw-text-dark-gray\">\n          Join the group now to share your real-time <br v-if=\"!isPhone\" />\n          calendar availability with each other!\n        </div>\n      </div>\n      <v-btn @click=\"join\" color=\"primary\" class=\"tw-mb-8\"\n        >Join with Google Calendar</v-btn\n      >\n      <div class=\"tw-text-center tw-text-dark-gray\">\n        Already have a Schej account?\n        <a @click=\"signIn\" class=\"tw-underline\">Sign in</a>\n      </div>\n\n      <v-dialog\n        v-model=\"calendarPermissionsDialog\"\n        width=\"400\"\n        content-class=\"tw-m-0\"\n      >\n        <v-card class=\"tw-p-4 sm:tw-p-6\">\n          <CalendarPermissionsCard\n            @cancel=\"calendarPermissionsDialog = false\"\n            @allow=\"allowCalendarAccess\"\n          />\n        </v-card>\n      </v-dialog>\n\n      <SignInNotSupportedDialog v-model=\"webviewDialog\" />\n    </div>\n  </v-fade-transition>\n</template>\n\n<script>\nimport { get, isPhone, signInGoogle } from \"@/utils\"\nimport { authTypes } from \"@/constants\"\nimport CalendarPermissionsCard from \"@/components/calendar_permission_dialogs/CalendarPermissionsCard.vue\"\nimport SignInNotSupportedDialog from \"@/components/SignInNotSupportedDialog.vue\"\nimport UserAvatarContent from \"@/components/UserAvatarContent.vue\"\nimport isWebview from \"is-ua-webview\"\n\nexport default {\n  name: \"NotSignedIn\",\n\n  props: {\n    event: { type: Object, required: true },\n  },\n\n  components: {\n    CalendarPermissionsCard,\n    SignInNotSupportedDialog,\n    UserAvatarContent,\n  },\n\n  data() {\n    return {\n      owner: {},\n      loaded: false,\n      calendarPermissionsDialog: false,\n      webviewDialog: false,\n    }\n  },\n\n  computed: {\n    isPhone() {\n      return isPhone(this.$vuetify)\n    },\n  },\n\n  methods: {\n    join() {\n      this.calendarPermissionsDialog = true\n    },\n    allowCalendarAccess() {\n      if (isWebview(navigator.userAgent)) {\n        this.webviewDialog = true\n        return\n      }\n\n      // Ask the user to select the account they want to sign in with if not logged in yet\n      signInGoogle({\n        state: {\n          type: authTypes.GROUP_SIGN_IN,\n          groupId: this.$route.params.groupId,\n        },\n        selectAccount: true,\n        requestCalendarPermission: true,\n      })\n    },\n    signIn() {\n      if (isWebview(navigator.userAgent)) {\n        this.webviewDialog = true\n        return\n      }\n\n      const state = {\n        type: authTypes.GROUP_SIGN_IN,\n        groupId: this.$route.params.groupId,\n      }\n      signInGoogle({\n        state,\n        selectAccount: true,\n      })\n    },\n  },\n\n  async created() {\n    this.owner = await get(`/users/${this.event.ownerId}`)\n    this.loaded = true\n  },\n}\n</script>\n"],"mappings":"AAiDA,SAAAA,GAAA,EAAAC,OAAA,EAAAC,YAAA;AACA,SAAAC,SAAA;AACA,OAAAC,uBAAA;AACA,OAAAC,wBAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EACA;EAEAC,UAAA;IACAV,uBAAA;IACAC,wBAAA;IACAC;EACA;EAEAS,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,yBAAA;MACAC,aAAA;IACA;EACA;EAEAC,QAAA;IACAnB,QAAA;MACA,OAAAA,OAAA,MAAAoB,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,KAAA;MACA,KAAAL,yBAAA;IACA;IACAM,oBAAA;MACA,IAAAjB,SAAA,CAAAkB,SAAA,CAAAC,SAAA;QACA,KAAAP,aAAA;QACA;MACA;;MAEA;MACAjB,YAAA;QACAyB,KAAA;UACAhB,IAAA,EAAAR,SAAA,CAAAyB,aAAA;UACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF;QACA;QACAG,aAAA;QACAC,yBAAA;MACA;IACA;IACAC,OAAA;MACA,IAAA3B,SAAA,CAAAkB,SAAA,CAAAC,SAAA;QACA,KAAAP,aAAA;QACA;MACA;MAEA,MAAAQ,KAAA;QACAhB,IAAA,EAAAR,SAAA,CAAAyB,aAAA;QACAC,OAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF;MACA;MACA3B,YAAA;QACAyB,KAAA;QACAK,aAAA;MACA;IACA;EACA;EAEA,MAAAG,QAAA;IACA,KAAAnB,KAAA,SAAAhB,GAAA,gBAAAU,KAAA,CAAA0B,OAAA;IACA,KAAAnB,MAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}