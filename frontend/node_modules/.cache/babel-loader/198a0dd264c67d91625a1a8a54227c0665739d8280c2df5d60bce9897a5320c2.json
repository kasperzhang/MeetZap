{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isPhone } from \"@/utils\";\nimport NewEvent from \"@/components/NewEvent.vue\";\nimport UnsavedChangesDialog from \"@/components/general/UnsavedChangesDialog.vue\";\nimport NewGroup from \"./NewGroup.vue\";\nimport NewSignUp from \"./NewSignUp.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"NewDialog\",\n  emits: [\"input\"],\n  props: {\n    value: {\n      type: Boolean,\n      required: true\n    },\n    type: {\n      type: String,\n      default: \"event\"\n    },\n    // Either \"event\" or \"group\"\n    event: {\n      type: Object\n    },\n    edit: {\n      type: Boolean,\n      default: false\n    },\n    contactsPayload: {\n      type: Object,\n      default: () => ({})\n    },\n    noTabs: {\n      type: Boolean,\n      default: false\n    },\n    folderId: {\n      type: String,\n      default: null\n    }\n  },\n  components: {\n    NewEvent,\n    NewGroup,\n    NewSignUp,\n    UnsavedChangesDialog\n  },\n  data() {\n    return {\n      tab: this.type,\n      tabs: [{\n        title: \"Event\",\n        type: \"event\"\n      }, {\n        title: \"Sign up form\",\n        type: \"signup\"\n      }, {\n        title: \"Availability group\",\n        type: \"group\"\n      }],\n      unsavedChangesDialog: false\n    };\n  },\n  computed: {\n    ...mapState([\"groupsEnabled\", \"signUpFormEnabled\"]),\n    isPhone() {\n      return isPhone(this.$vuetify);\n    },\n    _noTabs() {\n      if (!this.groupsEnabled) {\n        return true;\n      } else {\n        return this.noTabs;\n      }\n    }\n  },\n  methods: {\n    handleDialogInput() {\n      if (!this.edit || !this.$refs[this.tab].hasEventBeenEdited()) {\n        this.exitDialog();\n      } else {\n        this.unsavedChangesDialog = true;\n      }\n    },\n    exitDialog() {\n      this.$emit(\"input\", false);\n      if (this.edit) this.$refs[this.tab].resetToEventData();else this.$refs[this.tab].reset();\n    }\n  },\n  watch: {\n    groupsEnabled: {\n      immediate: true,\n      handler() {\n        this.tabs = [{\n          title: \"Event\",\n          type: \"event\"\n        }, {\n          title: \"Sign up form\",\n          type: \"signup\"\n        }];\n        if (this.groupsEnabled) {\n          this.tabs.push({\n            title: \"Availability group\",\n            type: \"group\"\n          });\n        }\n      }\n    },\n    signUpFormEnabled: {\n      immediate: true,\n      handler() {\n        this.tabs = [{\n          title: \"Event\",\n          type: \"event\"\n        }];\n        if (this.signUpFormEnabled) {\n          this.tabs.push({\n            title: \"Sign up form\",\n            type: \"signup\"\n          });\n        }\n        this.tabs.push({\n          title: \"Availability group\",\n          type: \"group\"\n        });\n      }\n    },\n    value: {\n      immediate: true,\n      handler() {\n        if (this.value) {\n          // Reset tab to the type prop when dialog is opened\n          this.tab = this.type;\n        }\n      }\n    },\n    type: {\n      immediate: true,\n      handler() {\n        this.tab = this.type;\n      }\n    }\n  }\n};","map":{"version":3,"names":["isPhone","NewEvent","UnsavedChangesDialog","NewGroup","NewSignUp","mapState","name","emits","props","value","type","Boolean","required","String","default","event","Object","edit","contactsPayload","noTabs","folderId","components","data","tab","tabs","title","unsavedChangesDialog","computed","$vuetify","_noTabs","groupsEnabled","methods","handleDialogInput","$refs","hasEventBeenEdited","exitDialog","$emit","resetToEventData","reset","watch","immediate","handler","push","signUpFormEnabled"],"sources":["src/components/NewDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    :value=\"value\"\n    @click:outside=\"handleDialogInput\"\n    no-click-animation\n    persistent\n    content-class=\"tw-max-w-[28rem]\"\n    :fullscreen=\"isPhone\"\n    scrollable\n    :transition=\"isPhone ? `dialog-bottom-transition` : `dialog-transition`\"\n  >\n    <UnsavedChangesDialog v-model=\"unsavedChangesDialog\" @leave=\"exitDialog\">\n    </UnsavedChangesDialog>\n    <v-card class=\"tw-pt-4\">\n      <div v-if=\"!_noTabs\" class=\"tw-flex tw-rounded sm:-tw-mt-4 sm:tw-px-8\">\n        <div class=\"tw-pt-4\">\n          <v-btn\n            v-for=\"t in tabs\"\n            :key=\"t.type\"\n            :tab-value=\"t.type\"\n            text\n            small\n            @click=\"() => (tab = t.type)\"\n            :class=\"`tw-text-xs tw-text-dark-gray tw-transition-all ${\n              t.type == tab ? 'tw-bg-ligher-green tw-text-green' : ''\n            }`\"\n          >\n            {{ t.title }}\n          </v-btn>\n        </div>\n        <v-spacer />\n        <v-btn\n          absolute\n          @click=\"$emit('input', false)\"\n          icon\n          class=\"tw-right-0 tw-mr-2 tw-self-center\"\n        >\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </div>\n\n      <template>\n        <NewEvent\n          v-if=\"tab === 'event'\"\n          ref=\"event\"\n          key=\"event\"\n          :event=\"event\"\n          :edit=\"edit\"\n          @input=\"handleDialogInput\"\n          :contactsPayload=\"this.type == 'event' ? contactsPayload : {}\"\n          :show-help=\"!_noTabs\"\n          :folder-id=\"folderId\"\n          @signIn=\"$emit('signIn')\"\n        />\n        <NewGroup\n          v-else-if=\"tab === 'group'\"\n          ref=\"group\"\n          key=\"group\"\n          :event=\"event\"\n          :edit=\"edit\"\n          @input=\"handleDialogInput\"\n          :show-help=\"!_noTabs\"\n          :folder-id=\"folderId\"\n          :contactsPayload=\"this.type == 'group' ? contactsPayload : {}\"\n        />\n        <NewSignUp\n          v-if=\"tab === 'signup'\"\n          ref=\"signup\"\n          key=\"signup\"\n          :event=\"event\"\n          :edit=\"edit\"\n          @input=\"handleDialogInput\"\n          :show-help=\"!_noTabs\"\n          :folder-id=\"folderId\"\n          :contactsPayload=\"this.type == 'signup' ? contactsPayload : {}\"\n        />\n      </template>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { isPhone } from \"@/utils\"\nimport NewEvent from \"@/components/NewEvent.vue\"\nimport UnsavedChangesDialog from \"@/components/general/UnsavedChangesDialog.vue\"\nimport NewGroup from \"./NewGroup.vue\"\nimport NewSignUp from \"./NewSignUp.vue\"\nimport { mapState } from \"vuex\"\n\nexport default {\n  name: \"NewDialog\",\n\n  emits: [\"input\"],\n\n  props: {\n    value: { type: Boolean, required: true },\n    type: { type: String, default: \"event\" }, // Either \"event\" or \"group\"\n    event: { type: Object },\n    edit: { type: Boolean, default: false },\n    contactsPayload: { type: Object, default: () => ({}) },\n    noTabs: { type: Boolean, default: false },\n    folderId: { type: String, default: null },\n  },\n\n  components: {\n    NewEvent,\n    NewGroup,\n    NewSignUp,\n    UnsavedChangesDialog,\n  },\n\n  data() {\n    return {\n      tab: this.type,\n      tabs: [\n        { title: \"Event\", type: \"event\" },\n        { title: \"Sign up form\", type: \"signup\" },\n        { title: \"Availability group\", type: \"group\" },\n      ],\n\n      unsavedChangesDialog: false,\n    }\n  },\n\n  computed: {\n    ...mapState([\"groupsEnabled\", \"signUpFormEnabled\"]),\n    isPhone() {\n      return isPhone(this.$vuetify)\n    },\n    _noTabs() {\n      if (!this.groupsEnabled) {\n        return true\n      } else {\n        return this.noTabs\n      }\n    },\n  },\n\n  methods: {\n    handleDialogInput() {\n      if (!this.edit || !this.$refs[this.tab].hasEventBeenEdited()) {\n        this.exitDialog()\n      } else {\n        this.unsavedChangesDialog = true\n      }\n    },\n    exitDialog() {\n      this.$emit(\"input\", false)\n      if (this.edit) this.$refs[this.tab].resetToEventData()\n      else this.$refs[this.tab].reset()\n    },\n  },\n\n  watch: {\n    groupsEnabled: {\n      immediate: true,\n      handler() {\n        this.tabs = [\n          { title: \"Event\", type: \"event\" },\n          { title: \"Sign up form\", type: \"signup\" },\n        ]\n        if (this.groupsEnabled) {\n          this.tabs.push({ title: \"Availability group\", type: \"group\" })\n        }\n      },\n    },\n    signUpFormEnabled: {\n      immediate: true,\n      handler() {\n        this.tabs = [{ title: \"Event\", type: \"event\" }]\n        if (this.signUpFormEnabled) {\n          this.tabs.push({ title: \"Sign up form\", type: \"signup\" })\n        }\n        this.tabs.push({ title: \"Availability group\", type: \"group\" })\n      },\n    },\n    value: {\n      immediate: true,\n      handler() {\n        if (this.value) {\n          // Reset tab to the type prop when dialog is opened\n          this.tab = this.type\n        }\n      },\n    },\n    type: {\n      immediate: true,\n      handler() {\n        this.tab = this.type\n      },\n    },\n  },\n}\n</script>\n"],"mappings":";AAkFA,SAAAA,OAAA;AACA,OAAAC,QAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,QAAA;AACA,OAAAC,SAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;EAEAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,OAAA;MAAAC,QAAA;IAAA;IACAF,IAAA;MAAAA,IAAA,EAAAG,MAAA;MAAAC,OAAA;IAAA;IAAA;IACAC,KAAA;MAAAL,IAAA,EAAAM;IAAA;IACAC,IAAA;MAAAP,IAAA,EAAAC,OAAA;MAAAG,OAAA;IAAA;IACAI,eAAA;MAAAR,IAAA,EAAAM,MAAA;MAAAF,OAAA,EAAAA,CAAA;IAAA;IACAK,MAAA;MAAAT,IAAA,EAAAC,OAAA;MAAAG,OAAA;IAAA;IACAM,QAAA;MAAAV,IAAA,EAAAG,MAAA;MAAAC,OAAA;IAAA;EACA;EAEAO,UAAA;IACApB,QAAA;IACAE,QAAA;IACAC,SAAA;IACAF;EACA;EAEAoB,KAAA;IACA;MACAC,GAAA,OAAAb,IAAA;MACAc,IAAA,GACA;QAAAC,KAAA;QAAAf,IAAA;MAAA,GACA;QAAAe,KAAA;QAAAf,IAAA;MAAA,GACA;QAAAe,KAAA;QAAAf,IAAA;MAAA,EACA;MAEAgB,oBAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAAtB,QAAA;IACAL,QAAA;MACA,OAAAA,OAAA,MAAA4B,QAAA;IACA;IACAC,QAAA;MACA,UAAAC,aAAA;QACA;MACA;QACA,YAAAX,MAAA;MACA;IACA;EACA;EAEAY,OAAA;IACAC,kBAAA;MACA,UAAAf,IAAA,UAAAgB,KAAA,MAAAV,GAAA,EAAAW,kBAAA;QACA,KAAAC,UAAA;MACA;QACA,KAAAT,oBAAA;MACA;IACA;IACAS,WAAA;MACA,KAAAC,KAAA;MACA,SAAAnB,IAAA,OAAAgB,KAAA,MAAAV,GAAA,EAAAc,gBAAA,QACA,KAAAJ,KAAA,MAAAV,GAAA,EAAAe,KAAA;IACA;EACA;EAEAC,KAAA;IACAT,aAAA;MACAU,SAAA;MACAC,QAAA;QACA,KAAAjB,IAAA,IACA;UAAAC,KAAA;UAAAf,IAAA;QAAA,GACA;UAAAe,KAAA;UAAAf,IAAA;QAAA,EACA;QACA,SAAAoB,aAAA;UACA,KAAAN,IAAA,CAAAkB,IAAA;YAAAjB,KAAA;YAAAf,IAAA;UAAA;QACA;MACA;IACA;IACAiC,iBAAA;MACAH,SAAA;MACAC,QAAA;QACA,KAAAjB,IAAA;UAAAC,KAAA;UAAAf,IAAA;QAAA;QACA,SAAAiC,iBAAA;UACA,KAAAnB,IAAA,CAAAkB,IAAA;YAAAjB,KAAA;YAAAf,IAAA;UAAA;QACA;QACA,KAAAc,IAAA,CAAAkB,IAAA;UAAAjB,KAAA;UAAAf,IAAA;QAAA;MACA;IACA;IACAD,KAAA;MACA+B,SAAA;MACAC,QAAA;QACA,SAAAhC,KAAA;UACA;UACA,KAAAc,GAAA,QAAAb,IAAA;QACA;MACA;IACA;IACAA,IAAA;MACA8B,SAAA;MACAC,QAAA;QACA,KAAAlB,GAAA,QAAAb,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}