{"ast":null,"code":"import Event from \"./Event.vue\";\nimport { mapActions, mapState } from \"vuex\";\nimport { get } from \"@/utils\";\nimport { errors } from \"@/constants\";\nimport AccessDenied from \"@/components/groups/AccessDenied.vue\";\nimport NotSignedIn from \"@/components/groups/NotSignedIn.vue\";\nexport default {\n  name: \"SignUp\",\n  props: {\n    signUpId: {\n      type: String,\n      required: true\n    },\n    fromSignIn: {\n      type: Boolean,\n      default: false\n    },\n    editingMode: {\n      type: Boolean,\n      default: false\n    },\n    initialTimezone: {\n      type: Object,\n      default: () => ({})\n    },\n    contactsPayload: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  components: {\n    AccessDenied,\n    Event,\n    NotSignedIn\n  },\n  data() {\n    return {\n      event: null\n    };\n  },\n  computed: {\n    ...mapState([\"authUser\"])\n  },\n  methods: {\n    ...mapActions([\"showError\"])\n  },\n  async created() {\n    try {\n      this.event = await get(`/events/${this.signUpId}`);\n\n      // TODO(tony): Redirect to correct routeif we're at the wrong route\n    } catch (err) {\n      switch (err.error) {\n        case errors.EventNotFound:\n          this.showError(\"The specified event does not exist!\");\n          this.$router.replace({\n            name: \"home\"\n          });\n          return;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Event","mapActions","mapState","get","errors","AccessDenied","NotSignedIn","name","props","signUpId","type","String","required","fromSignIn","Boolean","default","editingMode","initialTimezone","Object","contactsPayload","components","data","event","computed","methods","created","err","error","EventNotFound","showError","$router","replace"],"sources":["src/views/SignUp.vue"],"sourcesContent":["<template>\n  <div v-if=\"event\" class=\"tw-h-full\">\n    <Event\n      :eventId=\"signUpId\"\n      :fromSignIn=\"fromSignIn\"\n      :editingMode=\"editingMode\"\n      :initialTimezone=\"initialTimezone\"\n      :contactsPayload=\"contactsPayload\"\n    ></Event>\n  </div>\n</template>\n\n<script>\nimport Event from \"./Event.vue\"\nimport { mapActions, mapState } from \"vuex\"\nimport { get } from \"@/utils\"\nimport { errors } from \"@/constants\"\nimport AccessDenied from \"@/components/groups/AccessDenied.vue\"\nimport NotSignedIn from \"@/components/groups/NotSignedIn.vue\"\n\nexport default {\n  name: \"SignUp\",\n\n  props: {\n    signUpId: { type: String, required: true },\n    fromSignIn: { type: Boolean, default: false },\n    editingMode: { type: Boolean, default: false },\n    initialTimezone: { type: Object, default: () => ({}) },\n    contactsPayload: { type: Object, default: () => ({}) },\n  },\n\n  components: {\n    AccessDenied,\n    Event,\n    NotSignedIn,\n  },\n\n\n  data() {\n    return {\n      event: null,\n    }\n  },\n\n  computed: {\n    ...mapState([\"authUser\"]),\n  },\n\n  methods: {\n    ...mapActions([\"showError\"]),\n  },\n\n  async created() {\n    try {\n      this.event = await get(`/events/${this.signUpId}`)\n\n      // TODO(tony): Redirect to correct routeif we're at the wrong route\n    } catch (err) {\n      switch (err.error) {\n        case errors.EventNotFound:\n          this.showError(\"The specified event does not exist!\")\n          this.$router.replace({ name: \"home\" })\n          return\n      }\n    }\n  },\n}\n</script>\n"],"mappings":"AAaA,OAAAA,KAAA;AACA,SAAAC,UAAA,EAAAC,QAAA;AACA,SAAAC,GAAA;AACA,SAAAC,MAAA;AACA,OAAAC,YAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,QAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IACAC,UAAA;MAAAH,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAC,WAAA;MAAAN,IAAA,EAAAI,OAAA;MAAAC,OAAA;IAAA;IACAE,eAAA;MAAAP,IAAA,EAAAQ,MAAA;MAAAH,OAAA,EAAAA,CAAA;IAAA;IACAI,eAAA;MAAAT,IAAA,EAAAQ,MAAA;MAAAH,OAAA,EAAAA,CAAA;IAAA;EACA;EAEAK,UAAA;IACAf,YAAA;IACAL,KAAA;IACAM;EACA;EAGAe,KAAA;IACA;MACAC,KAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAArB,QAAA;EACA;EAEAsB,OAAA;IACA,GAAAvB,UAAA;EACA;EAEA,MAAAwB,QAAA;IACA;MACA,KAAAH,KAAA,SAAAnB,GAAA,iBAAAM,QAAA;;MAEA;IACA,SAAAiB,GAAA;MACA,QAAAA,GAAA,CAAAC,KAAA;QACA,KAAAvB,MAAA,CAAAwB,aAAA;UACA,KAAAC,SAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;YAAAxB,IAAA;UAAA;UACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}