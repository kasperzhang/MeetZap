{"version":3,"file":"ConfirmationMessage.jsx","sourceRoot":"","sources":["../../../../../src/extensions/surveys/components/ConfirmationMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,QAAQ,CAAA;AAE1B,OAAO,EACH,uBAAuB,EACvB,uBAAuB,EACvB,0BAA0B,GAC7B,MAAM,4BAA4B,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AAEzC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAA;AAE1D,MAAM,UAAU,mBAAmB,CAAC,EAgBnC;QAfG,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,gBAAgB,sBAAA,EAChB,UAAU,gBAAA,EACV,OAAO,aAAA,EACP,cAAc,oBAAA;IAUd,IAAM,SAAS,GAAG,uBAAuB,CAAC,UAAU,CAAC,eAAe,IAAI,uBAAuB,CAAC,eAAe,CAAC,CAAA;IAExG,IAAA,OAAO,GAAK,UAAU,CAAC,aAAa,CAAC,QAA9B,CAA8B;IAE7C,OAAO,CACH,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,aAAK,cAAc,EAAG,CAC5D;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,6BAA6B,CACxC;gBAAA,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,EAAG,CAChD;gBAAA,CAAC,EAAE,CAAC,SAAS,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CACjE;oBAAA,CAAC,MAAM,CACX;gBAAA,EAAE,EAAE,CACJ;gBAAA,CAAC,WAAW;YACR,0BAA0B,CAAC;gBACvB,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,wBAAwB,EAAE,CAAC;gBAC5D,QAAQ,EAAE,WAAW;gBACrB,YAAY,EAAE,CAAC,gBAAgB,IAAI,WAAW,KAAK,MAAM;gBACzD,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;aAC9B,CAAC,CACN;gBAAA,CAAC,OAAO,IAAI,CACR,CAAC,aAAa,CACV,IAAI,CAAC,CAAC,UAAU,CAAC,8BAA8B,IAAI,OAAO,CAAC,CAC3D,cAAc,CAAC,CAAC,KAAK,CAAC,CACtB,UAAU,CAAC,CAAC,UAAU,CAAC,CACvB,QAAQ,CAAC,CAAC,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,EAC5B,CACL,CACL;YAAA,EAAE,GAAG,CACT;QAAA,EAAE,GAAG,CAAC,CACT,CAAA;AACL,CAAC","sourcesContent":["import { h } from 'preact'\nimport { SurveyAppearance, SurveyQuestionDescriptionContentType } from '../../../posthog-surveys-types'\nimport {\n    defaultSurveyAppearance,\n    getContrastingTextColor,\n    renderChildrenAsTextOrHtml,\n} from '../surveys-extension-utils'\nimport { BottomSection } from './BottomSection'\nimport { Cancel } from './QuestionHeader'\n\nimport { useContext } from 'preact/hooks'\nimport { SurveyContext } from '../surveys-extension-utils'\n\nexport function ConfirmationMessage({\n    header,\n    description,\n    contentType,\n    forceDisableHtml,\n    appearance,\n    onClose,\n    styleOverrides,\n}: {\n    header: string\n    description: string\n    forceDisableHtml: boolean\n    contentType?: SurveyQuestionDescriptionContentType\n    appearance: SurveyAppearance\n    onClose: () => void\n    styleOverrides?: React.CSSProperties\n}) {\n    const textColor = getContrastingTextColor(appearance.backgroundColor || defaultSurveyAppearance.backgroundColor)\n\n    const { isPopup } = useContext(SurveyContext)\n\n    return (\n        <div className=\"thank-you-message\" style={{ ...styleOverrides }}>\n            <div className=\"thank-you-message-container\">\n                {isPopup && <Cancel onClick={() => onClose()} />}\n                <h3 className=\"thank-you-message-header\" style={{ color: textColor }}>\n                    {header}\n                </h3>\n                {description &&\n                    renderChildrenAsTextOrHtml({\n                        component: h('div', { className: 'thank-you-message-body' }),\n                        children: description,\n                        renderAsHtml: !forceDisableHtml && contentType !== 'text',\n                        style: { color: textColor },\n                    })}\n                {isPopup && (\n                    <BottomSection\n                        text={appearance.thankYouMessageCloseButtonText || 'Close'}\n                        submitDisabled={false}\n                        appearance={appearance}\n                        onSubmit={() => onClose()}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n"]}