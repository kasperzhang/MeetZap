{"version":3,"file":"js/35.a2f81394.js","mappings":"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","sources":["webpack://schej/./src/views/Auth.vue","webpack://schej/src/views/Auth.vue","webpack://schej/./src/views/Auth.vue?c593","webpack://schej/./src/views/Auth.vue?d034"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c(\"div\")\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template></template>\n\n<script>\nimport { get, post, getEventsCreated, deleteEventsCreated } from \"@/utils\"\nimport { mapMutations } from \"vuex\"\nimport { authTypes, calendarTypes } from \"@/constants\"\n\nexport default {\n  name: \"Auth\",\n\n  methods: {\n    ...mapMutations([\"setAuthUser\"]),\n  },\n\n  async created() {\n    let { error, code, scope, state } = this.$route.query\n    if (error) this.$router.replace({ name: \"home\" })\n\n    if (state) state = JSON.parse(decodeURIComponent(state))\n\n    // Sign in and set auth user\n    try {\n      if (\n        state?.type === authTypes.ADD_CALENDAR_ACCOUNT ||\n        state?.type === authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT\n      ) {\n        if (state.calendarType === calendarTypes.GOOGLE) {\n          await post(\"/user/add-google-calendar-account\", { code, scope })\n        } else if (state.calendarType === calendarTypes.OUTLOOK) {\n          await post(\"/user/add-outlook-calendar-account\", {\n            code,\n            scope: state.scope,\n          })\n        } else {\n          throw new Error(\"Invalid calendar type\")\n        }\n      } else {\n        const user = await post(\"/auth/sign-in\", {\n          code,\n          scope: scope ?? state.scope,\n          calendarType: state.calendarType,\n          timezoneOffset: new Date().getTimezoneOffset(),\n          eventsToLink: getEventsCreated(),\n        })\n        deleteEventsCreated()\n\n        this.setAuthUser(user)\n\n        this.$posthog?.identify(user._id, {\n          email: user.email,\n          firstName: user.firstName,\n          lastName: user.lastName,\n        })\n      }\n\n      // Redirect to the correct place based on \"state\", otherwise, just redirect to home\n      if (state) {\n        let authUser\n        switch (state.type) {\n          case authTypes.EVENT_ADD_AVAILABILITY:\n            this.$router.replace({\n              name: \"event\",\n              params: { eventId: state.eventId, fromSignIn: true },\n            })\n            break\n          case authTypes.EVENT_SIGN_IN:\n            this.$router.replace({\n              name: \"event\",\n              params: { eventId: state.eventId },\n            })\n            break\n          case authTypes.EVENT_SIGN_IN_LINK_APPLE:\n            this.$router.replace({\n              name: \"event\",\n              params: { eventId: state.eventId, linkApple: true },\n            })\n            break\n          case authTypes.GROUP_CREATE:\n            this.$router.replace({\n              name: \"home\",\n              params: {\n                openNewGroup: true,\n              },\n            })\n            break\n          case authTypes.GROUP_SIGN_IN:\n            this.$router.replace({\n              name: \"group\",\n              params: { groupId: state.groupId },\n            })\n            break\n          case authTypes.GROUP_ADD_AVAILABILITY:\n            this.$router.replace({\n              name: \"group\",\n              params: { groupId: state.eventId, fromSignIn: true },\n            })\n            authUser = await get(\"/user/profile\")\n            this.setAuthUser(authUser)\n            break\n          case authTypes.ADD_CALENDAR_ACCOUNT:\n            this.$router.replace({\n              name: \"settings\",\n            })\n            authUser = await get(\"/user/profile\")\n            this.setAuthUser(authUser)\n            break\n          case authTypes.ADD_CALENDAR_ACCOUNT_FROM_EDIT:\n            this.$router.replace({\n              name: \"event\",\n              params: { eventId: state.eventId, fromSignIn: true },\n            })\n            authUser = await get(\"/user/profile\")\n            this.setAuthUser(authUser)\n            break\n          case authTypes.EVENT_CONTACTS:\n            if (state.eventId == \"\") {\n              this.$router.replace({\n                name: \"home\",\n                params: {\n                  contactsPayload: state.payload,\n                  openNewGroup: state.openNewGroup,\n                },\n              })\n            } else {\n              this.$router.replace({\n                name: \"event\",\n                params: {\n                  eventId: state.eventId,\n                  contactsPayload: state.payload,\n                },\n              })\n            }\n            break\n          default:\n            this.$router.replace({ name: \"home\" })\n        }\n      } else {\n        this.$router.replace({ name: \"home\" })\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Auth.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Auth.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Auth.vue?vue&type=template&id=fa305470\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticRenderFns","name","methods","mapMutations","created","error","code","scope","state","$route","query","$router","replace","JSON","parse","decodeURIComponent","type","authTypes","ADD_CALENDAR_ACCOUNT","ADD_CALENDAR_ACCOUNT_FROM_EDIT","calendarType","calendarTypes","GOOGLE","post","OUTLOOK","Error","user","timezoneOffset","Date","getTimezoneOffset","eventsToLink","getEventsCreated","deleteEventsCreated","setAuthUser","$posthog","identify","_id","email","firstName","lastName","authUser","EVENT_ADD_AVAILABILITY","params","eventId","fromSignIn","EVENT_SIGN_IN","EVENT_SIGN_IN_LINK_APPLE","linkApple","GROUP_CREATE","openNewGroup","GROUP_SIGN_IN","groupId","GROUP_ADD_AVAILABILITY","get","EVENT_CONTACTS","contactsPayload","payload","err","console","component"],"sourceRoot":""}